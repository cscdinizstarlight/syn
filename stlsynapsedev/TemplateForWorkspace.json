{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "stlsynapsedev"
		},
		"LS_ASA_ServerlessSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASA_ServerlessSQL'"
		},
		"datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'datalake'"
		},
		"stlsynapsedev-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'stlsynapsedev-WorkspaceDefaultSqlServer'"
		},
		"LSRestRosterfy_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://getconnected.rosterfy.com.au/api/v2"
		},
		"LS_ASA_KV_DataIntegration_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://stlanalyticskeyvault.vault.azure.net/"
		},
		"LS_ASA_REST_Rosterfy_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://getconnected.rosterfy.com.au/api/v2"
		},
		"LS_ASQL_CONTROL_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ASQL-Control-ConnectionString"
		},
		"STLAnalytics_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://stlanalyticskeyvault.vault.azure.net/"
		},
		"datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stldatalakedev.dfs.core.windows.net"
		},
		"stlsynapsedev-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stlsynapsestorage.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/NotifiyTeamsChannelPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Set JSON schema",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "messageCard",
							"value": {
								"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": \"Pipeline status alert message​​​​\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Pipeline execution alert​​​​\",\n            \"facts\": [\n                {\n                    \"name\": \"Subscription Id:\",\n                    \"value\": \"@{pipeline().parameters.subscription}\"\n                },\n                {\n                    \"name\": \"Resource Group:\",\n                    \"value\": \"@{pipeline().parameters.resourceGroup}\"\n                },\n                {\n                    \"name\": \"Data Factory Name:\",\n                    \"value\": \"@{pipeline().DataFactory}\"\n                },\n                {\n                    \"name\": \"Pipeline RunId:\",\n                    \"value\": \"@{pipeline().parameters.runId}\"\n                },\n                {\n                    \"name\": \"Pipline Name:\",\n                    \"value\": \"@{pipeline().parameters.name}\"\n                },\n                {\n                    \"name\": \"Pipeline Status:\",\n                    \"value\": \"@{pipeline().parameters.status}\"\n                },\n                {\n                    \"name\": \"Execution Start Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.triggerTime}\"\n                },\n                {\n                    \"name\": \"Execution Finish Time (UTC):\",\n                    \"value\": \"@{pipeline().parameters.executionEndTime}\"\n                },\n                {\n                    \"name\": \"Execution Duration (s):\",\n                    \"value\": \"@{pipeline().parameters.runDuration}\"\n                },\n                {\n                    \"name\": \"Message:\",\n                    \"value\": \"@{pipeline().parameters.message}\"\n                },\n                {\n                    \"name\": \"Notification Time (UTC):\",\n                    \"value\": \"@{utcNow()}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ],\n    \"potentialAction\": [\n        {\n            \"@type\": \"OpenUri\",\n            \"name\": \"View pipeline run\",\n            \"targets\": [\n                {\n                    \"os\": \"default\",\n                    \"uri\": \"@{concat('https://adf.azure.com/monitoring/pipelineruns/',pipeline().parameters.runId,'?factory=/subscriptions/',pipeline().parameters.subscription,'/resourceGroups/',pipeline().parameters.resourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory)}\"\n                }\n            ]\n        }\n    ]\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Invoke Teams Webhook Url",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set JSON schema",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.teamWebhookUrl",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(variables('messageCard'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subscription": {
						"type": "string",
						"defaultValue": "85ba0bb5-dab1-4ecd-a8af-cc10b09d6068"
					},
					"resourceGroup": {
						"type": "string",
						"defaultValue": "STL-ANALYTICS-DEV"
					},
					"runId": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').output['pipelineRunId']"
					},
					"name": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').output['pipelineName']"
					},
					"triggerTime": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').ExecutionStartTime"
					},
					"status": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').Status"
					},
					"message": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').Error['message']"
					},
					"executionEndTime": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').ExecutionEndTime"
					},
					"runDuration": {
						"type": "string",
						"defaultValue": "@activity('Specify name of the calling pipeline').Duration"
					},
					"teamWebhookUrl": {
						"type": "string",
						"defaultValue": "https://scf.webhook.office.com/webhookb2/5723cf3e-52d5-47d8-a13a-088c04fcf421@341a3b2e-0537-4277-bae5-fc734ce03e96/IncomingWebhook/1773f53b158f48a7846acc442005fadb/d7d4a893-7992-4a85-abee-f7622db41075"
					}
				},
				"variables": {
					"messageCard": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-25T00:48:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_CONTROL_COPY_RAW_Rosterfy')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Files Rosterfy",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from dbo.controltable where isActive=1 and SourceSystem = 'Rosterfy' \norder by WorkerOrder asc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_CONTROL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T05:27:35Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_ASQL_CONTROL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Cleansed_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyBookedShiftToCleansed",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "Rosterfy/BookedShift/Staging",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "datalake",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['object']['id']"
										},
										"sink": {
											"name": "object_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['event_shift_id']"
										},
										"sink": {
											"name": "event_shift_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['user_id']"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['post_shift_feedback_form_completed_at']"
										},
										"sink": {
											"name": "post_shift_feedback_form_completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['precheckin_form_completed_at']"
										},
										"sink": {
											"name": "precheckin_form_completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['event_shift_status_id']"
										},
										"sink": {
											"name": "object_event_shift_status_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['is_leader']"
										},
										"sink": {
											"name": "object_is_leader",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['break']"
										},
										"sink": {
											"name": "break"
										}
									},
									{
										"source": {
											"path": "$['object']['start_timestamp']"
										},
										"sink": {
											"name": "object_start_timestamp"
										}
									},
									{
										"source": {
											"path": "$['object']['end_timestamp']"
										},
										"sink": {
											"name": "object_end_timestamp"
										}
									},
									{
										"source": {
											"path": "$['object']['cost']"
										},
										"sink": {
											"name": "cost"
										}
									},
									{
										"source": {
											"path": "$['object']['cost_meta']"
										},
										"sink": {
											"name": "cost_meta",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['latitude']"
										},
										"sink": {
											"name": "object_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['longitude']"
										},
										"sink": {
											"name": "object_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['deleted_at']"
										},
										"sink": {
											"name": "object_deleted_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['created_at']"
										},
										"sink": {
											"name": "object_created_at"
										}
									},
									{
										"source": {
											"path": "$['object']['updated_at']"
										},
										"sink": {
											"name": "object_updated_at"
										}
									},
									{
										"source": {
											"path": "$['nice']['rrn']"
										},
										"sink": {
											"name": "nice_rrn"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp']"
										},
										"sink": {
											"name": "nice_end_timestamp"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__date']"
										},
										"sink": {
											"name": "end_timestamp__date"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__time']"
										},
										"sink": {
											"name": "end_timestamp__time"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__offset']"
										},
										"sink": {
											"name": "end_timestamp__offset"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_shift_status_id']"
										},
										"sink": {
											"name": "nice_event_shift_status_id"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_shift_status_id:value']"
										},
										"sink": {
											"name": "event_shift_status_id:value"
										}
									},
									{
										"source": {
											"path": "$['nice']['is_leader']"
										},
										"sink": {
											"name": "nice_is_leader"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp']"
										},
										"sink": {
											"name": "nice_start_timestamp"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__date']"
										},
										"sink": {
											"name": "start_timestamp__date"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__time']"
										},
										"sink": {
											"name": "start_timestamp__time"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__offset']"
										},
										"sink": {
											"name": "start_timestamp__offset"
										}
									},
									{
										"source": {
											"path": "$['nice']['attended']['seconds']"
										},
										"sink": {
											"name": "attended_seconds"
										}
									},
									{
										"source": {
											"path": "$['nice']['attended']['minutes']"
										},
										"sink": {
											"name": "attended_minutes"
										}
									},
									{
										"source": {
											"path": "$['nice']['attended']['hours']"
										},
										"sink": {
											"name": "attended_hours"
										}
									},
									{
										"source": {
											"path": "$['nice']['attended']['pretty']"
										},
										"sink": {
											"name": "attended_pretty",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_id']"
										},
										"sink": {
											"name": "event_id"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_name']"
										},
										"sink": {
											"name": "event_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['is_event_leader']"
										},
										"sink": {
											"name": "is_event_leader"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_name']"
										},
										"sink": {
											"name": "shift_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_start_timestamp']"
										},
										"sink": {
											"name": "shift_start_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_end_timestamp']"
										},
										"sink": {
											"name": "shift_end_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_timezone']"
										},
										"sink": {
											"name": "shift_timezone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['requires_pre_checkin']"
										},
										"sink": {
											"name": "requires_pre_checkin"
										}
									},
									{
										"source": {
											"path": "$['nice']['has_shift_attended_form']"
										},
										"sink": {
											"name": "has_shift_attended_form"
										}
									},
									{
										"source": {
											"path": "$['nice']['has_checkin_form']"
										},
										"sink": {
											"name": "has_checkin_form"
										}
									},
									{
										"source": {
											"path": "$['nice']['has_checkout_form']"
										},
										"sink": {
											"name": "has_checkout_form"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T00:21:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_BookedShift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_BookedShift')]",
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Cleansed_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyEventToCleansed",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "Rosterfy/Event/Staging",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "datalake",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['object']['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['parent_id']"
										},
										"sink": {
											"name": "parent_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['event_template_id']"
										},
										"sink": {
											"name": "object_event_template_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['path']"
										},
										"sink": {
											"name": "path",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['event_type_id']"
										},
										"sink": {
											"name": "object_event_type_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['timezone']"
										},
										"sink": {
											"name": "timezone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['start_timestamp']"
										},
										"sink": {
											"name": "object_start_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['end_timestamp']"
										},
										"sink": {
											"name": "object_end_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['apps_open_timestamp']"
										},
										"sink": {
											"name": "object_apps_open_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['apps_close_timestamp']"
										},
										"sink": {
											"name": "object_apps_close_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_status_default']"
										},
										"sink": {
											"name": "shift_status_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['max_shift_apps_per_user']"
										},
										"sink": {
											"name": "max_shift_apps_per_user",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['min_shift_apps_per_user']"
										},
										"sink": {
											"name": "min_shift_apps_per_user",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['min_shift_apps_per_shift_type']"
										},
										"sink": {
											"name": "min_shift_apps_per_shift_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['gap_between_shifts']"
										},
										"sink": {
											"name": "gap_between_shifts",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_confirmed_status_default']"
										},
										"sink": {
											"name": "shift_confirmed_status_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_rejected_status_default']"
										},
										"sink": {
											"name": "shift_rejected_status_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_withdraw_default']"
										},
										"sink": {
											"name": "shift_can_withdraw_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_confirm_limit']"
										},
										"sink": {
											"name": "shift_can_confirm_limit",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_withdraw_limit']"
										},
										"sink": {
											"name": "shift_can_withdraw_limit",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checked_in_status_default']"
										},
										"sink": {
											"name": "shift_checked_in_status_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['certificate_id']"
										},
										"sink": {
											"name": "certificate_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_application_form_id_default']"
										},
										"sink": {
											"name": "object_shift_application_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checkin_form_id_default']"
										},
										"sink": {
											"name": "object_shift_checkin_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_attended_form_id_default']"
										},
										"sink": {
											"name": "object_shift_attended_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checkout_form_id_default']"
										},
										"sink": {
											"name": "object_shift_checkout_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_feedback_form_id_default']"
										},
										"sink": {
											"name": "object_shift_feedback_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_precheckin_form_id_default']"
										},
										"sink": {
											"name": "object_shift_precheckin_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['training_ids']"
										},
										"sink": {
											"name": "training_ids",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['banner_image']"
										},
										"sink": {
											"name": "banner_image",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['grid_image']"
										},
										"sink": {
											"name": "grid_image",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['minimum_dob']"
										},
										"sink": {
											"name": "minimum_dob",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['minimum_age']"
										},
										"sink": {
											"name": "minimum_age",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['role_offer_address']"
										},
										"sink": {
											"name": "object_role_offer_address",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['checkin_visible_attributes']"
										},
										"sink": {
											"name": "checkin_visible_attributes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_filter_attributes']"
										},
										"sink": {
											"name": "shift_filter_attributes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin']"
										},
										"sink": {
											"name": "object_self_checkin",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin_open']"
										},
										"sink": {
											"name": "self_checkin_open",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin_close']"
										},
										"sink": {
											"name": "self_checkin_close",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkout_close']"
										},
										"sink": {
											"name": "self_checkout_close",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_precheckin_open_default']"
										},
										"sink": {
											"name": "shift_precheckin_open_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_enable_waitlist_default']"
										},
										"sink": {
											"name": "shift_enable_waitlist_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['geofence_checkin_limit_default']"
										},
										"sink": {
											"name": "geofence_checkin_limit_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['max_waitlist']"
										},
										"sink": {
											"name": "max_waitlist",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['post_feedback_form']"
										},
										"sink": {
											"name": "post_feedback_form",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['post_feedback_publish_at']"
										},
										"sink": {
											"name": "post_feedback_publish_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['expression_of_interest_form']"
										},
										"sink": {
											"name": "expression_of_interest_form",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['is_virtual']"
										},
										"sink": {
											"name": "object_is_virtual",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['publish']"
										},
										"sink": {
											"name": "object_publish",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['promoted']"
										},
										"sink": {
											"name": "object_promoted",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['public']"
										},
										"sink": {
											"name": "public",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['public_shift']"
										},
										"sink": {
											"name": "public_shift",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['public_shift_default']"
										},
										"sink": {
											"name": "public_shift_default",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['object']['token']"
										},
										"sink": {
											"name": "token",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['deleted_at']"
										},
										"sink": {
											"name": "deleted_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['updated_at']"
										},
										"sink": {
											"name": "updated_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['name']"
										},
										"sink": {
											"name": "object_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['post_feedback']"
										},
										"sink": {
											"name": "post_feedback",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['iso']"
										},
										"sink": {
											"name": "iso",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['coordinates']['latitude']"
										},
										"sink": {
											"name": "object_address_coordinates_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['coordinates']['longitude']"
										},
										"sink": {
											"name": "object_address_coordinates_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_1']"
										},
										"sink": {
											"name": "street_address_1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_2']"
										},
										"sink": {
											"name": "street_address_2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_3']"
										},
										"sink": {
											"name": "street_address_3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['postcode']"
										},
										"sink": {
											"name": "postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['region']"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['latitude']"
										},
										"sink": {
											"name": "object_address_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['longitude']"
										},
										"sink": {
											"name": "object_address_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['visibility_show_groups'][0]"
										},
										"sink": {
											"name": "object_visibility_show_groups'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['visibility_hide_groups'][0]"
										},
										"sink": {
											"name": "object_visibility_hide_groups'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['visibility_show_roleoffer'][0]"
										},
										"sink": {
											"name": "object_visibility_show_roleoffer'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['rrn']"
										},
										"sink": {
											"name": "rrn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_close_timestamp']"
										},
										"sink": {
											"name": "nice_apps_close_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_close_timestamp__date']"
										},
										"sink": {
											"name": "apps_close_timestamp__date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_close_timestamp__time']"
										},
										"sink": {
											"name": "apps_close_timestamp__time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_close_timestamp__offset']"
										},
										"sink": {
											"name": "apps_close_timestamp__offset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_open_timestamp']"
										},
										"sink": {
											"name": "nice_apps_open_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_open_timestamp__date']"
										},
										"sink": {
											"name": "apps_open_timestamp__date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_open_timestamp__time']"
										},
										"sink": {
											"name": "apps_open_timestamp__time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apps_open_timestamp__offset']"
										},
										"sink": {
											"name": "apps_open_timestamp__offset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp']"
										},
										"sink": {
											"name": "nice_end_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__date']"
										},
										"sink": {
											"name": "end_timestamp__date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__time']"
										},
										"sink": {
											"name": "end_timestamp__time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__offset']"
										},
										"sink": {
											"name": "end_timestamp__offset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_template_id']"
										},
										"sink": {
											"name": "nice_event_template_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_template_id:value']"
										},
										"sink": {
											"name": "event_template_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_type_id']"
										},
										"sink": {
											"name": "nice_event_type_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_type_id:value']"
										},
										"sink": {
											"name": "event_type_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['is_virtual']"
										},
										"sink": {
											"name": "nice_is_virtual",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['name']"
										},
										"sink": {
											"name": "nice_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['promoted']"
										},
										"sink": {
											"name": "nice_promoted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['publish']"
										},
										"sink": {
											"name": "nice_publish",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['role_offer_address']"
										},
										"sink": {
											"name": "nice_role_offer_address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['self_checkin']"
										},
										"sink": {
											"name": "nice_self_checkin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_application_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_application_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_application_form_id_default:value']"
										},
										"sink": {
											"name": "shift_application_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_attended_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_attended_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_attended_form_id_default:value']"
										},
										"sink": {
											"name": "shift_attended_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkin_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_checkin_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkin_form_id_default:value']"
										},
										"sink": {
											"name": "shift_checkin_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkout_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_checkout_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkout_form_id_default:value']"
										},
										"sink": {
											"name": "shift_checkout_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_feedback_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_feedback_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_feedback_form_id_default:value']"
										},
										"sink": {
											"name": "shift_feedback_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_precheckin_form_id_default']"
										},
										"sink": {
											"name": "nice_shift_precheckin_form_id_default",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_precheckin_form_id_default:value']"
										},
										"sink": {
											"name": "shift_precheckin_form_id_default:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp']"
										},
										"sink": {
											"name": "nice_start_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__date']"
										},
										"sink": {
											"name": "start_timestamp__date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__time']"
										},
										"sink": {
											"name": "start_timestamp__time",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__offset']"
										},
										"sink": {
											"name": "start_timestamp__offset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['visibility_hide_groups']"
										},
										"sink": {
											"name": "visibility_hide_groups",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['visibility_show_groups']"
										},
										"sink": {
											"name": "visibility_show_groups",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['full_name']"
										},
										"sink": {
											"name": "full_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_type_name']"
										},
										"sink": {
											"name": "event_type_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['grid_list_image']"
										},
										"sink": {
											"name": "grid_list_image",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['min_shifts']"
										},
										"sink": {
											"name": "min_shifts",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['nice']['applied_shift_count']"
										},
										"sink": {
											"name": "applied_shift_count",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['nice']['post_event_feedback_form_completed_at']"
										},
										"sink": {
											"name": "post_event_feedback_form_completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['expression_of_interest_form_completed_at']"
										},
										"sink": {
											"name": "expression_of_interest_form_completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['address']"
										},
										"sink": {
											"name": "address",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['address_oneline']"
										},
										"sink": {
											"name": "address_oneline",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['apply']['code']"
										},
										"sink": {
											"name": "code",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['nice']['apply']['message']"
										},
										"sink": {
											"name": "message",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['relations'][0]"
										},
										"sink": {
											"name": "relations'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['permissions']['read']"
										},
										"sink": {
											"name": "read",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['permissions']['update']"
										},
										"sink": {
											"name": "update",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['permissions']['delete']"
										},
										"sink": {
											"name": "delete",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['permissions']['apply']"
										},
										"sink": {
											"name": "apply",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['attributes'][0]"
										},
										"sink": {
											"name": "attributes'][",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T00:13:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Event')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Event')]",
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Cleansed_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyShiftToCleansed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteAnyFileFromStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "Rosterfy/Shift/Staging",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "datalake",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['object']['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['object']['event_id']"
										},
										"sink": {
											"name": "event_id"
										}
									},
									{
										"source": {
											"path": "$['object']['event_shift_type_id']"
										},
										"sink": {
											"name": "object_event_shift_type_id"
										}
									},
									{
										"source": {
											"path": "$['object']['min_demand']"
										},
										"sink": {
											"name": "min_demand"
										}
									},
									{
										"source": {
											"path": "$['object']['max_demand']"
										},
										"sink": {
											"name": "max_demand"
										}
									},
									{
										"source": {
											"path": "$['object']['leader_demand']"
										},
										"sink": {
											"name": "leader_demand"
										}
									},
									{
										"source": {
											"path": "$['object']['start_timestamp']"
										},
										"sink": {
											"name": "object_start_timestamp"
										}
									},
									{
										"source": {
											"path": "$['object']['end_timestamp']"
										},
										"sink": {
											"name": "object_end_timestamp"
										}
									},
									{
										"source": {
											"path": "$['object']['timezone']"
										},
										"sink": {
											"name": "timezone"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_confirmed_status_default']"
										},
										"sink": {
											"name": "shift_confirmed_status_default"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_rejected_status_default']"
										},
										"sink": {
											"name": "shift_rejected_status_default"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_withdraw_default']"
										},
										"sink": {
											"name": "shift_can_withdraw_default"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_confirm_limit']"
										},
										"sink": {
											"name": "shift_can_confirm_limit"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_can_withdraw_limit']"
										},
										"sink": {
											"name": "shift_can_withdraw_limit"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checked_in_status_default']"
										},
										"sink": {
											"name": "shift_checked_in_status_default"
										}
									},
									{
										"source": {
											"path": "$['object']['certificate_id']"
										},
										"sink": {
											"name": "certificate_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_application_form_id']"
										},
										"sink": {
											"name": "object_shift_application_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checkin_form_id']"
										},
										"sink": {
											"name": "object_shift_checkin_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_attended_form_id']"
										},
										"sink": {
											"name": "object_shift_attended_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_checkout_form_id']"
										},
										"sink": {
											"name": "object_shift_checkout_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_precheckin_form_id']"
										},
										"sink": {
											"name": "object_shift_precheckin_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['training_ids']"
										},
										"sink": {
											"name": "training_ids",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['role_offer_id']"
										},
										"sink": {
											"name": "object_role_offer_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['role_offer_address']"
										},
										"sink": {
											"name": "object_role_offer_address"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_enable_waitlist_default']"
										},
										"sink": {
											"name": "shift_enable_waitlist_default"
										}
									},
									{
										"source": {
											"path": "$['object']['max_waitlist']"
										},
										"sink": {
											"name": "max_waitlist"
										}
									},
									{
										"source": {
											"path": "$['object']['minimum_dob']"
										},
										"sink": {
											"name": "minimum_dob",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['minimum_age']"
										},
										"sink": {
											"name": "object_minimum_age",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin']"
										},
										"sink": {
											"name": "object_self_checkin"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin_open']"
										},
										"sink": {
											"name": "self_checkin_open"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkin_close']"
										},
										"sink": {
											"name": "self_checkin_close"
										}
									},
									{
										"source": {
											"path": "$['object']['self_checkout_close']"
										},
										"sink": {
											"name": "self_checkout_close"
										}
									},
									{
										"source": {
											"path": "$['object']['shift_precheckin_open']"
										},
										"sink": {
											"name": "shift_precheckin_open",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['post_feedback_form']"
										},
										"sink": {
											"name": "object_post_feedback_form",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['is_virtual']"
										},
										"sink": {
											"name": "object_is_virtual"
										}
									},
									{
										"source": {
											"path": "$['object']['geofence_checkin_limit']"
										},
										"sink": {
											"name": "geofence_checkin_limit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['publish']"
										},
										"sink": {
											"name": "object_publish"
										}
									},
									{
										"source": {
											"path": "$['object']['public']"
										},
										"sink": {
											"name": "public"
										}
									},
									{
										"source": {
											"path": "$['object']['sort_order']"
										},
										"sink": {
											"name": "sort_order"
										}
									},
									{
										"source": {
											"path": "$['object']['is_cancelled']"
										},
										"sink": {
											"name": "is_cancelled"
										}
									},
									{
										"source": {
											"path": "$['object']['deleted_at']"
										},
										"sink": {
											"name": "deleted_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['created_at']"
										},
										"sink": {
											"name": "created_at"
										}
									},
									{
										"source": {
											"path": "$['object']['updated_at']"
										},
										"sink": {
											"name": "updated_at"
										}
									},
									{
										"source": {
											"path": "$['object']['wish_sparkle_details']"
										},
										"sink": {
											"name": "object_wish_sparkle_details"
										}
									},
									{
										"source": {
											"path": "$['object']['wish_sparkle_name']"
										},
										"sink": {
											"name": "object_wish_sparkle_name"
										}
									},
									{
										"source": {
											"path": "$['object']['name']"
										},
										"sink": {
											"name": "object_name"
										}
									},
									{
										"source": {
											"path": "$['object']['event_shift_description']"
										},
										"sink": {
											"name": "event_shift_description"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['iso']"
										},
										"sink": {
											"name": "iso"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['coordinates']['latitude']"
										},
										"sink": {
											"name": "object_address_coordinates_latitude"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['coordinates']['longitude']"
										},
										"sink": {
											"name": "object_address_coordinates_longitude"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_1']"
										},
										"sink": {
											"name": "street_address_1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_2']"
										},
										"sink": {
											"name": "street_address_2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['street_address_3']"
										},
										"sink": {
											"name": "street_address_3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['postcode']"
										},
										"sink": {
											"name": "postcode"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['region']"
										},
										"sink": {
											"name": "region"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['country']"
										},
										"sink": {
											"name": "country"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['latitude']"
										},
										"sink": {
											"name": "object_address_latitude"
										}
									},
									{
										"source": {
											"path": "$['object']['address']['longitude']"
										},
										"sink": {
											"name": "object_address_longitude"
										}
									},
									{
										"source": {
											"path": "$['nice']['rrn']"
										},
										"sink": {
											"name": "rrn"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp']"
										},
										"sink": {
											"name": "nice_end_timestamp"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__date']"
										},
										"sink": {
											"name": "end_timestamp__date"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__time']"
										},
										"sink": {
											"name": "end_timestamp__time"
										}
									},
									{
										"source": {
											"path": "$['nice']['end_timestamp__offset']"
										},
										"sink": {
											"name": "end_timestamp__offset"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_shift_type_id']"
										},
										"sink": {
											"name": "nice_event_shift_type_id"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_shift_type_id:value']"
										},
										"sink": {
											"name": "event_shift_type_id:value"
										}
									},
									{
										"source": {
											"path": "$['nice']['is_virtual']"
										},
										"sink": {
											"name": "nice_is_virtual"
										}
									},
									{
										"source": {
											"path": "$['nice']['minimum_age']"
										},
										"sink": {
											"name": "nice_minimum_age"
										}
									},
									{
										"source": {
											"path": "$['nice']['name']"
										},
										"sink": {
											"name": "nice_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['post_feedback_form']"
										},
										"sink": {
											"name": "nice_post_feedback_form",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['post_feedback_form:value']"
										},
										"sink": {
											"name": "post_feedback_form:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['publish']"
										},
										"sink": {
											"name": "nice_publish"
										}
									},
									{
										"source": {
											"path": "$['nice']['role_offer_address']"
										},
										"sink": {
											"name": "nice_role_offer_address"
										}
									},
									{
										"source": {
											"path": "$['nice']['role_offer_id']"
										},
										"sink": {
											"name": "nice_role_offer_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['role_offer_id:value']"
										},
										"sink": {
											"name": "role_offer_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['self_checkin']"
										},
										"sink": {
											"name": "nice_self_checkin"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_application_form_id']"
										},
										"sink": {
											"name": "nice_shift_application_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_application_form_id:value']"
										},
										"sink": {
											"name": "shift_application_form_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_attended_form_id']"
										},
										"sink": {
											"name": "nice_shift_attended_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_attended_form_id:value']"
										},
										"sink": {
											"name": "shift_attended_form_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkin_form_id']"
										},
										"sink": {
											"name": "nice_shift_checkin_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkin_form_id:value']"
										},
										"sink": {
											"name": "shift_checkin_form_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkout_form_id']"
										},
										"sink": {
											"name": "nice_shift_checkout_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_checkout_form_id:value']"
										},
										"sink": {
											"name": "shift_checkout_form_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_precheckin_form_id']"
										},
										"sink": {
											"name": "nice_shift_precheckin_form_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_precheckin_form_id:value']"
										},
										"sink": {
											"name": "shift_precheckin_form_id:value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp']"
										},
										"sink": {
											"name": "nice_start_timestamp"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__date']"
										},
										"sink": {
											"name": "start_timestamp__date"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__time']"
										},
										"sink": {
											"name": "start_timestamp__time"
										}
									},
									{
										"source": {
											"path": "$['nice']['start_timestamp__offset']"
										},
										"sink": {
											"name": "start_timestamp__offset"
										}
									},
									{
										"source": {
											"path": "$['nice']['visibility_hide_groups']"
										},
										"sink": {
											"name": "visibility_hide_groups"
										}
									},
									{
										"source": {
											"path": "$['nice']['visibility_show_groups']"
										},
										"sink": {
											"name": "visibility_show_groups"
										}
									},
									{
										"source": {
											"path": "$['nice']['wish_sparkle_details']"
										},
										"sink": {
											"name": "nice_wish_sparkle_details"
										}
									},
									{
										"source": {
											"path": "$['nice']['wish_sparkle_name']"
										},
										"sink": {
											"name": "nice_wish_sparkle_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['info']"
										},
										"sink": {
											"name": "info"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_shift_link_id']"
										},
										"sink": {
											"name": "event_shift_link_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nice']['account_id']"
										},
										"sink": {
											"name": "account_id"
										}
									},
									{
										"source": {
											"path": "$['nice']['account_url']"
										},
										"sink": {
											"name": "account_url"
										}
									},
									{
										"source": {
											"path": "$['nice']['shift_type_name']"
										},
										"sink": {
											"name": "shift_type_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['post_shift_feedback_form_completed_at']"
										},
										"sink": {
											"name": "post_shift_feedback_form_completed_at"
										}
									},
									{
										"source": {
											"path": "$['nice']['pre_checkin_form_completed_at']"
										},
										"sink": {
											"name": "pre_checkin_form_completed_at"
										}
									},
									{
										"source": {
											"path": "$['nice']['event_name']"
										},
										"sink": {
											"name": "event_name"
										}
									},
									{
										"source": {
											"path": "$['nice']['address']"
										},
										"sink": {
											"name": "address"
										}
									},
									{
										"source": {
											"path": "$['nice']['address_oneline']"
										},
										"sink": {
											"name": "address_oneline"
										}
									},
									{
										"source": {
											"path": "$['permissions']['read']"
										},
										"sink": {
											"name": "read"
										}
									},
									{
										"source": {
											"path": "$['permissions']['update']"
										},
										"sink": {
											"name": "update"
										}
									},
									{
										"source": {
											"path": "$['permissions']['delete']"
										},
										"sink": {
											"name": "delete"
										}
									},
									{
										"source": {
											"path": "$['permissions']['apply']"
										},
										"sink": {
											"name": "apply"
										}
									},
									{
										"source": {
											"path": "$['permissions']['apply_error']"
										},
										"sink": {
											"name": "apply_error",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['permissions']['apply_error_code']"
										},
										"sink": {
											"name": "apply_error_code"
										}
									},
									{
										"source": {
											"path": "$['permissions']['confirm']"
										},
										"sink": {
											"name": "confirm"
										}
									},
									{
										"source": {
											"path": "$['permissions']['reject']"
										},
										"sink": {
											"name": "reject"
										}
									},
									{
										"source": {
											"path": "$['permissions']['selfCheckin']"
										},
										"sink": {
											"name": "selfCheckin"
										}
									},
									{
										"source": {
											"path": "$['permissions']['selfCheckout']"
										},
										"sink": {
											"name": "selfCheckout"
										}
									},
									{
										"source": {
											"path": "$['permissions']['submitAttendedForm']"
										},
										"sink": {
											"name": "submitAttendedForm"
										}
									},
									{
										"source": {
											"path": "$['permissions']['precheckin']"
										},
										"sink": {
											"name": "precheckin"
										}
									},
									{
										"source": {
											"path": "$['permissions']['applyWaitlist']"
										},
										"sink": {
											"name": "applyWaitlist"
										}
									},
									{
										"source": {
											"path": "$['permissions']['cancel']"
										},
										"sink": {
											"name": "cancel"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteAnyFileFromStaging",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T05:41:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Shift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Shift')]",
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Cleansed_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DeleteAnyFileFromStaging",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ArchiveRawRosterfyUser",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "RunDFCleanseRosterfyUser",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_User_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Archive",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@concat('Rosterfy/User/', formatDateTime(utcnow(), 'yyyy'), '/', formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'), '/') ",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "RunDFCleanseRosterfyUser",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DeleteAnyFileFromStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Cleanse_Rosterfy_User",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"JSONRawRosterfyUser": {},
									"sinkToCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-16T05:58:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User_Binary')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Archive')]",
				"[concat(variables('workspaceId'), '/dataflows/DF_Cleanse_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Curated_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyBookedShiftCleansedToCurated",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "Rosterfy/BookedShift/Staging",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "object_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_shift_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_shift_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "post_shift_feedback_form_completed_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "post_shift_feedback_form_completed_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "precheckin_form_completed_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "precheckin_form_completed_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_event_shift_status_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_event_shift_status_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_start_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_start_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_end_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_end_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_deleted_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_deleted_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_created_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_created_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_updated_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_updated_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_end_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_end_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_event_shift_status_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_event_shift_status_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_is_leader",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_is_leader",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_start_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_start_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "attended_seconds",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attended_seconds",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "attended_minutes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attended_minutes",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "attended_hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attended_hours",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "attended_pretty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attended_pretty",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "is_event_leader",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_event_leader",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_start_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_start_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_end_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_end_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_timezone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_timezone",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "requires_pre_checkin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "requires_pre_checkin",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "has_shift_attended_form",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "has_shift_attended_form",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "has_checkin_form",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "has_checkin_form",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "has_checkout_form",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "has_checkout_form",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Curated_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T22:42:21Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_BookedShift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_BookedShift')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Curated_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyEventCleansedToCurated",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "Rosterfy/Event/Staging",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "parent_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parent_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_event_template_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_event_template_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "path",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "path",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_event_type_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_event_type_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "timezone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timezone",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_start_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_start_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_end_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_end_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_apps_open_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_apps_open_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_apps_close_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_apps_close_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_status_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_status_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "max_shift_apps_per_user",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "max_shift_apps_per_user",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "min_shift_apps_per_user",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "min_shift_apps_per_user",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "min_shift_apps_per_shift_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "min_shift_apps_per_shift_type",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "gap_between_shifts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gap_between_shifts",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_confirmed_status_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_confirmed_status_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_rejected_status_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_rejected_status_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_can_withdraw_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_can_withdraw_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_can_confirm_limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_can_confirm_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_can_withdraw_limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_can_withdraw_limit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_checked_in_status_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_checked_in_status_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "certificate_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "certificate_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_application_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_application_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_checkin_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_checkin_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_attended_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_attended_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_checkout_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_checkout_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_feedback_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_feedback_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_shift_precheckin_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_shift_precheckin_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "training_ids",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "training_ids",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "banner_image",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "banner_image",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "grid_image",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grid_image",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "minimum_dob",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minimum_dob",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "minimum_age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "minimum_age",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_role_offer_address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_role_offer_address",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "checkin_visible_attributes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "checkin_visible_attributes",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_filter_attributes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_filter_attributes",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_self_checkin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_self_checkin",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "self_checkin_open",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "self_checkin_open",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "self_checkin_close",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "self_checkin_close",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "self_checkout_close",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "self_checkout_close",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_precheckin_open_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_precheckin_open_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_enable_waitlist_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_enable_waitlist_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "geofence_checkin_limit_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "geofence_checkin_limit_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "max_waitlist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "max_waitlist",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "post_feedback_form",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "post_feedback_form",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "post_feedback_publish_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "post_feedback_publish_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "expression_of_interest_form",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "expression_of_interest_form",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_is_virtual",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_is_virtual",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_publish",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_publish",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_promoted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_promoted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "public",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "public",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "public_shift",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "public_shift",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "public_shift_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "public_shift_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "token",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "token",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deleted_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "post_feedback",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "post_feedback",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "iso",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "iso",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_address_coordinates_latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_address_coordinates_latitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_address_coordinates_longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_address_coordinates_longitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "street_address_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "street_address_1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "street_address_2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "street_address_2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "street_address_3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "street_address_3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "postcode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_address_latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_address_latitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_address_longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_address_longitude",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_visibility_show_groups'][",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_visibility_show_groups'][",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_visibility_hide_groups'][",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_visibility_hide_groups'][",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "object_visibility_show_roleoffer'][",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "object_visibility_show_roleoffer'][",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "rrn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rrn",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_apps_close_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_apps_close_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_close_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_close_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_close_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_close_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_close_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_close_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_apps_open_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_apps_open_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_open_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_open_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_open_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_open_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apps_open_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apps_open_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_end_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_end_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "end_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "end_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_event_template_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_event_template_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_template_id:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_template_id:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_event_type_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_event_type_id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_type_id:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type_id:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_is_virtual",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_is_virtual",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_promoted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_promoted",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_publish",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_publish",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_role_offer_address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_role_offer_address",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_self_checkin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_self_checkin",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_application_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_application_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_application_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_application_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_attended_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_attended_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_attended_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_attended_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_checkin_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_checkin_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_checkin_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_checkin_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_checkout_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_checkout_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_checkout_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_checkout_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_feedback_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_feedback_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_feedback_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_feedback_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_shift_precheckin_form_id_default",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_shift_precheckin_form_id_default",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "shift_precheckin_form_id_default:value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shift_precheckin_form_id_default:value",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nice_start_timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nice_start_timestamp",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__date",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "start_timestamp__offset",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "start_timestamp__offset",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "visibility_hide_groups",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "visibility_hide_groups",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "visibility_show_groups",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "visibility_show_groups",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "full_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "full_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "event_type_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "grid_list_image",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grid_list_image",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "min_shifts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "min_shifts",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "applied_shift_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "applied_shift_count",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "post_event_feedback_form_completed_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "post_event_feedback_form_completed_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "expression_of_interest_form_completed_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "expression_of_interest_form_completed_at",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "address_oneline",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address_oneline",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "message",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "message",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "relations'][",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "relations'][",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "read",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "read",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "update",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "update",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "delete",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "delete",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "apply",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "apply",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "attributes'][",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attributes'][",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Curated_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T22:51:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Event')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_Event')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Curated_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DF_Rosterfy_Shift",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Curate_Rosterfy_Shift",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RosterfyShift": {},
									"SinkRosterfyShift": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-16T22:56:50Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_Curate_Rosterfy_Shift')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Curated_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RunDFCurateRosterfyUser",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Curate_Rosterfy_User",
								"type": "DataFlowReference",
								"parameters": {
									"DFParamPLTriggerTime": {
										"value": "toTimestamp(left('@{pipeline().TriggerTime}', 23), 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSS')",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"DSCleansedRosterfyUser": {},
									"sinkRosterfyUser": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ArchiveCleansedRosterfyUser",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "RunDFCurateRosterfyUser",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_User_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Cleansed_Rosterfy_Archive",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@concat('Rosterfy/User/', formatDateTime(utcnow(), 'yyyy'), '/', formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'), '/') ",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-17T06:53:53Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_Curate_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_User_Binary')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_Archive_Binary')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Use Binary files for Source and Sink datasets - binary files support \"Delete files after completion\" option",
				"activities": [
					{
						"name": "ArchiveRawRosterfyUser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_User_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Archive",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@concat('Rosterfy/User/', formatDateTime(utcnow(), 'yyyy'), '/', formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'), '/') ",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-15T06:41:29Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User_Binary')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyBookedShiftToLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Source_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_BookedShift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T04:44:28Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Source_Rosterfy_BookedShift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_BookedShift')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyEventToLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Source_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Event",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-07T23:48:02Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Source_Rosterfy_Event')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Event')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyShiftToLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteAnyFileFromStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Source_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteAnyFileFromStaging",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Raw_Rosterfy_Shift",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T05:41:38Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Source_Rosterfy_Shift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_Shift')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RosterfyUserToLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteAnyFileFromStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Source_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteAnyFileFromStaging",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Raw_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-16T03:41:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Source_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Raw_Rosterfy_User_Archive')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "To archive raw files from Rosterfy",
				"activities": [
					{
						"name": "SetMonthVariable",
						"description": "Test setting Month variable in MM format",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "varMonth",
							"value": {
								"value": "@utcnow('MM')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyRosterfyUsertoArchive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetMonthVariable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Raw_Rosterfy_User_Archive",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@concat('Rosterfy/User/', formatDateTime(utcnow(), 'yyyy'), '/', formatDateTime(utcnow(), 'MM'), '/', formatDateTime(utcnow(), 'dd'), '/') ",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteRosterfyUserRaw",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyRosterfyUsertoArchive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Raw_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varMonth": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-16T03:41:11Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_TEST_ForEach')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get_File_Names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_Shift_FOLDER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachShiftFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_File_Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_File_Names').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetFileSize",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Cleansed_Rosterfy_Shift_INPUT",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-17T03:56:41Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Shift_FOLDER')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Shift_INPUT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_TEST_Incremental')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RunDFRosterfyUserIncr",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Curate_Rosterfy_User_Incr",
								"type": "DataFlowReference",
								"parameters": {
									"DFParamPLTriggerTime": {
										"value": "toTimestamp(left('@{pipeline().TriggerTime}', 23), 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSS')",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"todayCleansedData": {},
									"allRosterfyUser": {},
									"getMaxSurrKey": {},
									"sinkIncrementalData": {},
									"cacheMaxSurrKey": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-17T23:31:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_Curate_Rosterfy_User_Incr')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_TEST_InitialiseOrRegular')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "chkParquetFileExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Curated_Rosterfy_User",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "chkParquetFileExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('chkParquetFileExists').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "RunDFCuratedRosterfyUser",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DF_Curate_Rosterfy_User",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"DSCleansedRosterfyUser": {},
												"sinkRosterfyUser": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "varTest",
										"value": "YES_TRUE"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varTest": {
						"type": "String",
						"defaultValue": "TestTRUE"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-16T23:52:21Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/dataflows/DF_Curate_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_TEST_MasterPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "RunPLTESTForEach",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TEST_ForEach",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OnSuccess Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RunPLTESTForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NotifiyTeamsChannelPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"runId": {
									"value": "@activity('RunPLTESTForEach').output['pipelineRunId']",
									"type": "Expression"
								},
								"name": {
									"value": "@activity('RunPLTESTForEach').output['pipelineName']",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@activity('RunPLTESTForEach').ExecutionStartTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('RunPLTESTForEach').Status",
									"type": "Expression"
								},
								"message": "Pipeline - RunPLTESTForEach ran with success.",
								"executionEndTime": {
									"value": "@activity('RunPLTESTForEach').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('RunPLTESTForEach').Duration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "OnFailure Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RunPLTESTForEach",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NotifiyTeamsChannelPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"runId": {
									"value": "@activity('RunPLTESTForEach').output['pipelineRunId']",
									"type": "Expression"
								},
								"name": {
									"value": "@activity('RunPLTESTForEach').output['pipelineName']",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@activity('RunPLTESTForEach').ExecutionStartTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('RunPLTESTForEach').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('RunPLTESTForEach').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('RunPLTESTForEach').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('RunPLTESTForEach').Duration",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-25T03:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PL_TEST_ForEach')]",
				"[concat(variables('workspaceId'), '/pipelines/NotifiyTeamsChannelPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ASQL_CONTROL')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_CONTROL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ASQL_CONTROL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_Archive')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Dynamic folder name to archive Rosterfy cleansed files to right folder, e.g. cleansed/Rosterfy/User/yyyy/MM/dd/",
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "cleansed"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/BookedShift/Staging",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Event/Staging",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Shift/Staging",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "event_id",
						"type": "String"
					},
					{
						"name": "object_event_shift_type_id",
						"type": "String"
					},
					{
						"name": "min_demand",
						"type": "String"
					},
					{
						"name": "max_demand",
						"type": "String"
					},
					{
						"name": "leader_demand",
						"type": "String"
					},
					{
						"name": "object_start_timestamp",
						"type": "String"
					},
					{
						"name": "object_end_timestamp",
						"type": "String"
					},
					{
						"name": "timezone",
						"type": "String"
					},
					{
						"name": "shift_confirmed_status_default",
						"type": "String"
					},
					{
						"name": "shift_rejected_status_default",
						"type": "String"
					},
					{
						"name": "shift_can_withdraw_default",
						"type": "String"
					},
					{
						"name": "shift_can_confirm_limit",
						"type": "String"
					},
					{
						"name": "shift_can_withdraw_limit",
						"type": "String"
					},
					{
						"name": "shift_checked_in_status_default",
						"type": "String"
					},
					{
						"name": "certificate_id",
						"type": "String"
					},
					{
						"name": "object_shift_application_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_checkin_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_attended_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_checkout_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_precheckin_form_id",
						"type": "String"
					},
					{
						"name": "training_ids",
						"type": "String"
					},
					{
						"name": "object_role_offer_id",
						"type": "String"
					},
					{
						"name": "object_role_offer_address",
						"type": "String"
					},
					{
						"name": "shift_enable_waitlist_default",
						"type": "String"
					},
					{
						"name": "max_waitlist",
						"type": "String"
					},
					{
						"name": "minimum_dob",
						"type": "String"
					},
					{
						"name": "object_minimum_age",
						"type": "String"
					},
					{
						"name": "object_self_checkin",
						"type": "String"
					},
					{
						"name": "self_checkin_open",
						"type": "String"
					},
					{
						"name": "self_checkin_close",
						"type": "String"
					},
					{
						"name": "self_checkout_close",
						"type": "String"
					},
					{
						"name": "shift_precheckin_open",
						"type": "String"
					},
					{
						"name": "object_post_feedback_form",
						"type": "String"
					},
					{
						"name": "object_is_virtual",
						"type": "String"
					},
					{
						"name": "geofence_checkin_limit",
						"type": "String"
					},
					{
						"name": "object_publish",
						"type": "String"
					},
					{
						"name": "public",
						"type": "String"
					},
					{
						"name": "sort_order",
						"type": "String"
					},
					{
						"name": "is_cancelled",
						"type": "String"
					},
					{
						"name": "deleted_at",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "object_wish_sparkle_details",
						"type": "String"
					},
					{
						"name": "object_wish_sparkle_name",
						"type": "String"
					},
					{
						"name": "object_name",
						"type": "String"
					},
					{
						"name": "event_shift_description",
						"type": "String"
					},
					{
						"name": "iso",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_latitude",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_longitude",
						"type": "String"
					},
					{
						"name": "street_address_1",
						"type": "String"
					},
					{
						"name": "street_address_2",
						"type": "String"
					},
					{
						"name": "street_address_3",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "object_address_latitude",
						"type": "String"
					},
					{
						"name": "object_address_longitude",
						"type": "String"
					},
					{
						"name": "rrn",
						"type": "String"
					},
					{
						"name": "nice_end_timestamp",
						"type": "String"
					},
					{
						"name": "end_timestamp__date",
						"type": "String"
					},
					{
						"name": "end_timestamp__time",
						"type": "String"
					},
					{
						"name": "end_timestamp__offset",
						"type": "String"
					},
					{
						"name": "nice_event_shift_type_id",
						"type": "String"
					},
					{
						"name": "event_shift_type_id:value",
						"type": "String"
					},
					{
						"name": "nice_is_virtual",
						"type": "String"
					},
					{
						"name": "nice_minimum_age",
						"type": "String"
					},
					{
						"name": "nice_name",
						"type": "String"
					},
					{
						"name": "nice_post_feedback_form",
						"type": "String"
					},
					{
						"name": "post_feedback_form:value",
						"type": "String"
					},
					{
						"name": "nice_publish",
						"type": "String"
					},
					{
						"name": "nice_role_offer_address",
						"type": "String"
					},
					{
						"name": "nice_role_offer_id",
						"type": "String"
					},
					{
						"name": "role_offer_id:value",
						"type": "String"
					},
					{
						"name": "nice_self_checkin",
						"type": "String"
					},
					{
						"name": "nice_shift_application_form_id",
						"type": "String"
					},
					{
						"name": "shift_application_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_attended_form_id",
						"type": "String"
					},
					{
						"name": "shift_attended_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_checkin_form_id",
						"type": "String"
					},
					{
						"name": "shift_checkin_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_checkout_form_id",
						"type": "String"
					},
					{
						"name": "shift_checkout_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_precheckin_form_id",
						"type": "String"
					},
					{
						"name": "shift_precheckin_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_start_timestamp",
						"type": "String"
					},
					{
						"name": "start_timestamp__date",
						"type": "String"
					},
					{
						"name": "start_timestamp__time",
						"type": "String"
					},
					{
						"name": "start_timestamp__offset",
						"type": "String"
					},
					{
						"name": "visibility_hide_groups",
						"type": "String"
					},
					{
						"name": "visibility_show_groups",
						"type": "String"
					},
					{
						"name": "nice_wish_sparkle_details",
						"type": "String"
					},
					{
						"name": "nice_wish_sparkle_name",
						"type": "String"
					},
					{
						"name": "info",
						"type": "String"
					},
					{
						"name": "event_shift_link_id",
						"type": "String"
					},
					{
						"name": "account_id",
						"type": "String"
					},
					{
						"name": "account_url",
						"type": "String"
					},
					{
						"name": "shift_type_name",
						"type": "String"
					},
					{
						"name": "post_shift_feedback_form_completed_at",
						"type": "String"
					},
					{
						"name": "pre_checkin_form_completed_at",
						"type": "String"
					},
					{
						"name": "event_name",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "address_oneline",
						"type": "String"
					},
					{
						"name": "read",
						"type": "String"
					},
					{
						"name": "update",
						"type": "String"
					},
					{
						"name": "delete",
						"type": "String"
					},
					{
						"name": "apply",
						"type": "String"
					},
					{
						"name": "apply_error",
						"type": "String"
					},
					{
						"name": "apply_error_code",
						"type": "String"
					},
					{
						"name": "confirm",
						"type": "String"
					},
					{
						"name": "reject",
						"type": "String"
					},
					{
						"name": "selfCheckin",
						"type": "String"
					},
					{
						"name": "selfCheckout",
						"type": "String"
					},
					{
						"name": "submitAttendedForm",
						"type": "String"
					},
					{
						"name": "precheckin",
						"type": "String"
					},
					{
						"name": "applyWaitlist",
						"type": "String"
					},
					{
						"name": "cancel",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_Shift_FOLDER')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Shift",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_Shift_INPUT')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "Rosterfy/Shift",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "event_id",
						"type": "String"
					},
					{
						"name": "object_event_shift_type_id",
						"type": "String"
					},
					{
						"name": "min_demand",
						"type": "String"
					},
					{
						"name": "max_demand",
						"type": "String"
					},
					{
						"name": "leader_demand",
						"type": "String"
					},
					{
						"name": "object_start_timestamp",
						"type": "String"
					},
					{
						"name": "object_end_timestamp",
						"type": "String"
					},
					{
						"name": "timezone",
						"type": "String"
					},
					{
						"name": "shift_confirmed_status_default",
						"type": "String"
					},
					{
						"name": "shift_rejected_status_default",
						"type": "String"
					},
					{
						"name": "shift_can_withdraw_default",
						"type": "String"
					},
					{
						"name": "shift_can_confirm_limit",
						"type": "String"
					},
					{
						"name": "shift_can_withdraw_limit",
						"type": "String"
					},
					{
						"name": "shift_checked_in_status_default",
						"type": "String"
					},
					{
						"name": "certificate_id",
						"type": "String"
					},
					{
						"name": "object_shift_application_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_checkin_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_attended_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_checkout_form_id",
						"type": "String"
					},
					{
						"name": "object_shift_precheckin_form_id",
						"type": "String"
					},
					{
						"name": "training_ids",
						"type": "String"
					},
					{
						"name": "object_role_offer_id",
						"type": "String"
					},
					{
						"name": "object_role_offer_address",
						"type": "String"
					},
					{
						"name": "shift_enable_waitlist_default",
						"type": "String"
					},
					{
						"name": "max_waitlist",
						"type": "String"
					},
					{
						"name": "minimum_dob",
						"type": "String"
					},
					{
						"name": "object_minimum_age",
						"type": "String"
					},
					{
						"name": "object_self_checkin",
						"type": "String"
					},
					{
						"name": "self_checkin_open",
						"type": "String"
					},
					{
						"name": "self_checkin_close",
						"type": "String"
					},
					{
						"name": "self_checkout_close",
						"type": "String"
					},
					{
						"name": "shift_precheckin_open",
						"type": "String"
					},
					{
						"name": "object_post_feedback_form",
						"type": "String"
					},
					{
						"name": "object_is_virtual",
						"type": "String"
					},
					{
						"name": "geofence_checkin_limit",
						"type": "String"
					},
					{
						"name": "object_publish",
						"type": "String"
					},
					{
						"name": "public",
						"type": "String"
					},
					{
						"name": "sort_order",
						"type": "String"
					},
					{
						"name": "is_cancelled",
						"type": "String"
					},
					{
						"name": "deleted_at",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "object_wish_sparkle_details",
						"type": "String"
					},
					{
						"name": "object_wish_sparkle_name",
						"type": "String"
					},
					{
						"name": "object_name",
						"type": "String"
					},
					{
						"name": "event_shift_description",
						"type": "String"
					},
					{
						"name": "iso",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_latitude",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_longitude",
						"type": "String"
					},
					{
						"name": "street_address_1",
						"type": "String"
					},
					{
						"name": "street_address_2",
						"type": "String"
					},
					{
						"name": "street_address_3",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "object_address_latitude",
						"type": "String"
					},
					{
						"name": "object_address_longitude",
						"type": "String"
					},
					{
						"name": "rrn",
						"type": "String"
					},
					{
						"name": "nice_end_timestamp",
						"type": "String"
					},
					{
						"name": "end_timestamp__date",
						"type": "String"
					},
					{
						"name": "end_timestamp__time",
						"type": "String"
					},
					{
						"name": "end_timestamp__offset",
						"type": "String"
					},
					{
						"name": "nice_event_shift_type_id",
						"type": "String"
					},
					{
						"name": "event_shift_type_id:value",
						"type": "String"
					},
					{
						"name": "nice_is_virtual",
						"type": "String"
					},
					{
						"name": "nice_minimum_age",
						"type": "String"
					},
					{
						"name": "nice_name",
						"type": "String"
					},
					{
						"name": "nice_post_feedback_form",
						"type": "String"
					},
					{
						"name": "post_feedback_form:value",
						"type": "String"
					},
					{
						"name": "nice_publish",
						"type": "String"
					},
					{
						"name": "nice_role_offer_address",
						"type": "String"
					},
					{
						"name": "nice_role_offer_id",
						"type": "String"
					},
					{
						"name": "role_offer_id:value",
						"type": "String"
					},
					{
						"name": "nice_self_checkin",
						"type": "String"
					},
					{
						"name": "nice_shift_application_form_id",
						"type": "String"
					},
					{
						"name": "shift_application_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_attended_form_id",
						"type": "String"
					},
					{
						"name": "shift_attended_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_checkin_form_id",
						"type": "String"
					},
					{
						"name": "shift_checkin_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_checkout_form_id",
						"type": "String"
					},
					{
						"name": "shift_checkout_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_shift_precheckin_form_id",
						"type": "String"
					},
					{
						"name": "shift_precheckin_form_id:value",
						"type": "String"
					},
					{
						"name": "nice_start_timestamp",
						"type": "String"
					},
					{
						"name": "start_timestamp__date",
						"type": "String"
					},
					{
						"name": "start_timestamp__time",
						"type": "String"
					},
					{
						"name": "start_timestamp__offset",
						"type": "String"
					},
					{
						"name": "visibility_hide_groups",
						"type": "String"
					},
					{
						"name": "visibility_show_groups",
						"type": "String"
					},
					{
						"name": "nice_wish_sparkle_details",
						"type": "String"
					},
					{
						"name": "nice_wish_sparkle_name",
						"type": "String"
					},
					{
						"name": "info",
						"type": "String"
					},
					{
						"name": "event_shift_link_id",
						"type": "String"
					},
					{
						"name": "account_id",
						"type": "String"
					},
					{
						"name": "account_url",
						"type": "String"
					},
					{
						"name": "shift_type_name",
						"type": "String"
					},
					{
						"name": "post_shift_feedback_form_completed_at",
						"type": "String"
					},
					{
						"name": "pre_checkin_form_completed_at",
						"type": "String"
					},
					{
						"name": "event_name",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "address_oneline",
						"type": "String"
					},
					{
						"name": "read",
						"type": "String"
					},
					{
						"name": "update",
						"type": "String"
					},
					{
						"name": "delete",
						"type": "String"
					},
					{
						"name": "apply",
						"type": "String"
					},
					{
						"name": "apply_error",
						"type": "String"
					},
					{
						"name": "apply_error_code",
						"type": "String"
					},
					{
						"name": "confirm",
						"type": "String"
					},
					{
						"name": "reject",
						"type": "String"
					},
					{
						"name": "selfCheckin",
						"type": "String"
					},
					{
						"name": "selfCheckout",
						"type": "String"
					},
					{
						"name": "submitAttendedForm",
						"type": "String"
					},
					{
						"name": "precheckin",
						"type": "String"
					},
					{
						"name": "applyWaitlist",
						"type": "String"
					},
					{
						"name": "cancel",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/User/Staging",
						"fileSystem": "cleansed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "object_id",
						"type": "String"
					},
					{
						"name": "object_id_token",
						"type": "String"
					},
					{
						"name": "object_email",
						"type": "String"
					},
					{
						"name": "object_first_name",
						"type": "String"
					},
					{
						"name": "object_middle_name",
						"type": "String"
					},
					{
						"name": "object_last_name",
						"type": "String"
					},
					{
						"name": "object_preferred_name",
						"type": "String"
					},
					{
						"name": "object_phone",
						"type": "String"
					},
					{
						"name": "object_dob",
						"type": "String"
					},
					{
						"name": "object_picture",
						"type": "String"
					},
					{
						"name": "object_picture_status",
						"type": "String"
					},
					{
						"name": "object_is_subscribed",
						"type": "String"
					},
					{
						"name": "object_is_unreachable",
						"type": "String"
					},
					{
						"name": "object_terms",
						"type": "String"
					},
					{
						"name": "object_rating",
						"type": "String"
					},
					{
						"name": "object_shift_privacy",
						"type": "String"
					},
					{
						"name": "object_is_team_leader",
						"type": "String"
					},
					{
						"name": "object_email_verified",
						"type": "String"
					},
					{
						"name": "object_verify_email_token",
						"type": "String"
					},
					{
						"name": "object_login_lockout_attempts",
						"type": "String"
					},
					{
						"name": "object_login_lockout_at",
						"type": "String"
					},
					{
						"name": "object_login_lockout_email_sent_at",
						"type": "String"
					},
					{
						"name": "object_last_login_at",
						"type": "String"
					},
					{
						"name": "object_delete_requested_at",
						"type": "String"
					},
					{
						"name": "object_deleted_at",
						"type": "String"
					},
					{
						"name": "object_created_at",
						"type": "String"
					},
					{
						"name": "object_updated_at",
						"type": "String"
					},
					{
						"name": "object_team_member_id",
						"type": "String"
					},
					{
						"name": "object_state",
						"type": "String"
					},
					{
						"name": "object_employment_status",
						"type": "String"
					},
					{
						"name": "object_address",
						"type": "String"
					},
					{
						"name": "nice_rrn",
						"type": "String"
					},
					{
						"name": "nice_email_verified",
						"type": "String"
					},
					{
						"name": "nice_first_name",
						"type": "String"
					},
					{
						"name": "nice_is_subscribed",
						"type": "String"
					},
					{
						"name": "nice_is_team_leader",
						"type": "String"
					},
					{
						"name": "nice_last_name",
						"type": "String"
					},
					{
						"name": "nice_middle_name",
						"type": "String"
					},
					{
						"name": "nice_phone",
						"type": "String"
					},
					{
						"name": "nice_phone:raw",
						"type": "String"
					},
					{
						"name": "nice_preferred_name",
						"type": "String"
					},
					{
						"name": "nice_shift_privacy",
						"type": "String"
					},
					{
						"name": "nice_terms",
						"type": "String"
					},
					{
						"name": "nice_employment_status",
						"type": "String"
					},
					{
						"name": "nice_state",
						"type": "String"
					},
					{
						"name": "nice_team_member_id",
						"type": "String"
					},
					{
						"name": "nice_name",
						"type": "String"
					},
					{
						"name": "nice_age",
						"type": "String"
					},
					{
						"name": "nice_address",
						"type": "String"
					},
					{
						"name": "nice_address_oneline",
						"type": "String"
					},
					{
						"name": "nice_info",
						"type": "String"
					},
					{
						"name": "nice_background_check_user",
						"type": "String"
					},
					{
						"name": "nice_preferred_first_name",
						"type": "String"
					},
					{
						"name": "nice_available_by_default",
						"type": "String"
					},
					{
						"name": "nice_google2fa_enabled",
						"type": "String"
					},
					{
						"name": "nice_picture_status",
						"type": "String"
					},
					{
						"name": "nice_delete_requested",
						"type": "String"
					},
					{
						"name": "nice_updated_hours",
						"type": "String"
					},
					{
						"name": "nice_login_locked",
						"type": "String"
					},
					{
						"name": "nice_duplicate_status",
						"type": "String"
					},
					{
						"name": "permissions_read",
						"type": "String"
					},
					{
						"name": "permissions_update",
						"type": "String"
					},
					{
						"name": "permissions_delete",
						"type": "String"
					},
					{
						"name": "permissions_impersonate",
						"type": "String"
					},
					{
						"name": "attributes_employment_status_name",
						"type": "String"
					},
					{
						"name": "attributes_employment_status_label",
						"type": "String"
					},
					{
						"name": "attributes_employment_status_type",
						"type": "String"
					},
					{
						"name": "attributes_employment_state_name",
						"type": "String"
					},
					{
						"name": "attributes_employment_state_label",
						"type": "String"
					},
					{
						"name": "attributes_employment_state_type",
						"type": "String"
					},
					{
						"name": "object_address_iso",
						"type": "String"
					},
					{
						"name": "object_address_coordinates",
						"type": "String"
					},
					{
						"name": "object_address_street_address_1",
						"type": "String"
					},
					{
						"name": "object_address_street_address_2",
						"type": "String"
					},
					{
						"name": "object_address_street_address_3",
						"type": "String"
					},
					{
						"name": "object_address_city",
						"type": "String"
					},
					{
						"name": "object_address_postcode",
						"type": "String"
					},
					{
						"name": "object_address_region",
						"type": "String"
					},
					{
						"name": "object_address_country",
						"type": "String"
					},
					{
						"name": "object_address_latitude",
						"type": "String"
					},
					{
						"name": "object_address_longitude",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_latitude",
						"type": "String"
					},
					{
						"name": "object_address_coordinates_longitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Cleansed_Rosterfy_User_Binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/User/Staging",
						"fileSystem": "cleansed"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Curated_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "RosterfyBookedShift.parquet",
						"folderPath": "Rosterfy/BookedShift",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "object_first_name",
						"type": "UTF8"
					},
					{
						"name": "object_middle_name",
						"type": "UTF8"
					},
					{
						"name": "object_last_name",
						"type": "UTF8"
					},
					{
						"name": "object_preferred_name",
						"type": "UTF8"
					},
					{
						"name": "object_is_subscribed",
						"type": "UTF8"
					},
					{
						"name": "is_unreachable",
						"type": "UTF8"
					},
					{
						"name": "object_terms",
						"type": "UTF8"
					},
					{
						"name": "rating",
						"type": "UTF8"
					},
					{
						"name": "object_shift_privacy",
						"type": "UTF8"
					},
					{
						"name": "object_is_team_leader",
						"type": "UTF8"
					},
					{
						"name": "last_login_at",
						"type": "UTF8"
					},
					{
						"name": "delete_requested_at",
						"type": "UTF8"
					},
					{
						"name": "deleted_at",
						"type": "UTF8"
					},
					{
						"name": "created_at",
						"type": "UTF8"
					},
					{
						"name": "updated_at",
						"type": "UTF8"
					},
					{
						"name": "object_team_member_id",
						"type": "UTF8"
					},
					{
						"name": "object_state",
						"type": "UTF8"
					},
					{
						"name": "object_employment_status",
						"type": "UTF8"
					},
					{
						"name": "nice_email_verified",
						"type": "UTF8"
					},
					{
						"name": "nice_first_name",
						"type": "UTF8"
					},
					{
						"name": "nice_is_subscribed",
						"type": "UTF8"
					},
					{
						"name": "nice_is_team_leader",
						"type": "UTF8"
					},
					{
						"name": "nice_last_name",
						"type": "UTF8"
					},
					{
						"name": "nice_middle_name",
						"type": "UTF8"
					},
					{
						"name": "nice_phone",
						"type": "UTF8"
					},
					{
						"name": "nice_preferred_name",
						"type": "UTF8"
					},
					{
						"name": "nice_shift_privacy",
						"type": "UTF8"
					},
					{
						"name": "nice_terms",
						"type": "UTF8"
					},
					{
						"name": "nice_employment_status",
						"type": "UTF8"
					},
					{
						"name": "nice_state",
						"type": "UTF8"
					},
					{
						"name": "nice_team_member_id",
						"type": "UTF8"
					},
					{
						"name": "nice_name",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "UTF8"
					},
					{
						"name": "preferred_first_name",
						"type": "UTF8"
					},
					{
						"name": "available_by_default",
						"type": "UTF8"
					},
					{
						"name": "google2fa_enabled",
						"type": "UTF8"
					},
					{
						"name": "nice_picture_status",
						"type": "UTF8"
					},
					{
						"name": "delete_requested",
						"type": "UTF8"
					},
					{
						"name": "updated_hours",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Curated_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Event",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Curated_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Shift",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Curated_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/User",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_LogicalDW')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASA_ServerlessSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ASA_ServerlessSQL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_Archive')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/BookedShift/Staging",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Event/Staging",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/Shift/Staging",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/User/Staging",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"object": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"id_token": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"first_name": {
									"type": "string"
								},
								"middle_name": {
									"type": "null"
								},
								"last_name": {
									"type": "string"
								},
								"preferred_name": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"dob": {
									"type": "string"
								},
								"picture": {
									"type": "string"
								},
								"picture_status": {
									"type": "integer"
								},
								"is_subscribed": {
									"type": "integer"
								},
								"is_unreachable": {
									"type": "integer"
								},
								"terms": {
									"type": "integer"
								},
								"rating": {
									"type": "string"
								},
								"shift_privacy": {
									"type": "integer"
								},
								"is_team_leader": {
									"type": "integer"
								},
								"email_verified": {
									"type": "integer"
								},
								"verify_email_token": {
									"type": "null"
								},
								"login_lockout_attempts": {
									"type": "integer"
								},
								"login_lockout_at": {
									"type": "null"
								},
								"login_lockout_email_sent_at": {
									"type": "null"
								},
								"last_login_at": {
									"type": "string"
								},
								"delete_requested_at": {
									"type": "null"
								},
								"deleted_at": {
									"type": "null"
								},
								"created_at": {
									"type": "string"
								},
								"updated_at": {
									"type": "string"
								},
								"team_member_id": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"employment_status": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"iso": {
											"type": "string"
										},
										"coordinates": {
											"type": "object",
											"properties": {
												"latitude": {
													"type": "string"
												},
												"longitude": {
													"type": "string"
												}
											}
										},
										"street_address_1": {
											"type": "string"
										},
										"street_address_2": {
											"type": "null"
										},
										"street_address_3": {
											"type": "null"
										},
										"city": {
											"type": "string"
										},
										"postcode": {
											"type": "string"
										},
										"region": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"latitude": {
											"type": "string"
										},
										"longitude": {
											"type": "string"
										}
									}
								}
							}
						},
						"nice": {
							"type": "object",
							"properties": {
								"rrn": {
									"type": "string"
								},
								"email_verified": {
									"type": "string"
								},
								"first_name": {
									"type": "string"
								},
								"is_subscribed": {
									"type": "string"
								},
								"is_team_leader": {
									"type": "string"
								},
								"last_name": {
									"type": "string"
								},
								"middle_name": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"phone:raw": {
									"type": "string"
								},
								"preferred_name": {
									"type": "string"
								},
								"shift_privacy": {
									"type": "string"
								},
								"terms": {
									"type": "string"
								},
								"employment_status": {
									"type": "string"
								},
								"state": {
									"type": "string"
								},
								"team_member_id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"age": {
									"type": "integer"
								},
								"address": {
									"type": "string"
								},
								"address_oneline": {
									"type": "string"
								},
								"info": {
									"type": "string"
								},
								"background_check_user": {
									"type": "array"
								},
								"preferred_first_name": {
									"type": "string"
								},
								"available_by_default": {
									"type": "boolean"
								},
								"google2fa_enabled": {
									"type": "boolean"
								},
								"picture_status": {
									"type": "string"
								},
								"delete_requested": {
									"type": "boolean"
								},
								"updated_hours": {
									"type": "integer"
								},
								"login_locked": {
									"type": "boolean"
								},
								"duplicate_status": {
									"type": "string"
								}
							}
						},
						"relations": {
							"type": "array"
						},
						"permissions": {
							"type": "object",
							"properties": {
								"read": {
									"type": "boolean"
								},
								"update": {
									"type": "boolean"
								},
								"delete": {
									"type": "boolean"
								},
								"impersonate": {
									"type": "boolean"
								}
							}
						},
						"attributes": {
							"type": "object",
							"properties": {
								"employment_status": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"label": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"state": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"label": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_User_Archive')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"object": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								},
								"event_shift_id": {
									"type": "integer"
								},
								"user_id": {
									"type": "integer"
								},
								"post_shift_feedback_form_completed_at": {
									"type": "null"
								},
								"precheckin_form_completed_at": {
									"type": "null"
								},
								"event_shift_status_id": {
									"type": "integer"
								},
								"is_leader": {
									"type": "integer"
								},
								"break": {
									"type": "string"
								},
								"start_timestamp": {
									"type": "string"
								},
								"end_timestamp": {
									"type": "string"
								},
								"cost": {
									"type": "string"
								},
								"cost_meta": {
									"type": "null"
								},
								"latitude": {
									"type": "null"
								},
								"longitude": {
									"type": "null"
								},
								"deleted_at": {
									"type": "null"
								},
								"created_at": {
									"type": "string"
								},
								"updated_at": {
									"type": "string"
								}
							}
						},
						"nice": {
							"type": "object",
							"properties": {
								"rrn": {
									"type": "string"
								},
								"end_timestamp": {
									"type": "string"
								},
								"end_timestamp__date": {
									"type": "string"
								},
								"end_timestamp__time": {
									"type": "string"
								},
								"end_timestamp__offset": {
									"type": "string"
								},
								"event_shift_status_id": {
									"type": "string"
								},
								"event_shift_status_id:value": {
									"type": "integer"
								},
								"is_leader": {
									"type": "string"
								},
								"start_timestamp": {
									"type": "string"
								},
								"start_timestamp__date": {
									"type": "string"
								},
								"start_timestamp__time": {
									"type": "string"
								},
								"start_timestamp__offset": {
									"type": "string"
								},
								"attended": {
									"type": "object",
									"properties": {
										"seconds": {
											"type": "integer"
										},
										"minutes": {
											"type": "integer"
										},
										"hours": {
											"type": "number"
										},
										"pretty": {
											"type": "null"
										}
									}
								},
								"event_id": {
									"type": "integer"
								},
								"event_name": {
									"type": "string"
								},
								"is_event_leader": {
									"type": "boolean"
								},
								"checkin_location": {
									"type": "null"
								},
								"shift_name": {
									"type": "string"
								},
								"user_name": {
									"type": "string"
								},
								"requires_pre_checkin": {
									"type": "boolean"
								},
								"has_shift_attended_form": {
									"type": "boolean"
								},
								"has_checkin_form": {
									"type": "boolean"
								},
								"has_checkout_form": {
									"type": "boolean"
								},
								"shift_checkin_visible_attributes": {
									"type": "array"
								}
							}
						},
						"relations": {
							"type": "object",
							"properties": {
								"user": {
									"type": "object",
									"properties": {
										"object": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"id_token": {
													"type": "string"
												},
												"email": {
													"type": "string"
												},
												"first_name": {
													"type": "string"
												},
												"middle_name": {
													"type": "string"
												},
												"last_name": {
													"type": "string"
												},
												"preferred_name": {
													"type": "string"
												},
												"phone": {
													"type": "string"
												},
												"dob": {
													"type": "string"
												},
												"picture": {
													"type": "string"
												},
												"picture_status": {
													"type": "integer"
												},
												"is_subscribed": {
													"type": "integer"
												},
												"is_unreachable": {
													"type": "integer"
												},
												"terms": {
													"type": "integer"
												},
												"rating": {
													"type": "string"
												},
												"shift_privacy": {
													"type": "integer"
												},
												"is_team_leader": {
													"type": "integer"
												},
												"email_verified": {
													"type": "integer"
												},
												"verify_email_token": {
													"type": "null"
												},
												"login_lockout_attempts": {
													"type": "integer"
												},
												"login_lockout_at": {
													"type": "null"
												},
												"login_lockout_email_sent_at": {
													"type": "null"
												},
												"last_login_at": {
													"type": "string"
												},
												"delete_requested_at": {
													"type": "null"
												},
												"deleted_at": {
													"type": "null"
												},
												"created_at": {
													"type": "string"
												},
												"updated_at": {
													"type": "string"
												},
												"team_member_id": {
													"type": "string"
												},
												"state": {
													"type": "string"
												},
												"employment_status": {
													"type": "string"
												},
												"address": {
													"type": "object",
													"properties": {
														"iso": {
															"type": "null"
														},
														"coordinates": {
															"type": "object",
															"properties": {
																"latitude": {
																	"type": "null"
																},
																"longitude": {
																	"type": "null"
																}
															}
														},
														"street_address_1": {
															"type": "null"
														},
														"street_address_2": {
															"type": "null"
														},
														"street_address_3": {
															"type": "null"
														},
														"city": {
															"type": "null"
														},
														"postcode": {
															"type": "null"
														},
														"region": {
															"type": "null"
														},
														"country": {
															"type": "null"
														},
														"latitude": {
															"type": "null"
														},
														"longitude": {
															"type": "null"
														}
													}
												}
											}
										},
										"nice": {
											"type": "object",
											"properties": {
												"rrn": {
													"type": "string"
												},
												"email_verified": {
													"type": "string"
												},
												"first_name": {
													"type": "string"
												},
												"is_subscribed": {
													"type": "string"
												},
												"is_team_leader": {
													"type": "string"
												},
												"last_name": {
													"type": "string"
												},
												"middle_name": {
													"type": "string"
												},
												"phone": {
													"type": "string"
												},
												"phone:raw": {
													"type": "string"
												},
												"preferred_name": {
													"type": "string"
												},
												"shift_privacy": {
													"type": "string"
												},
												"terms": {
													"type": "string"
												},
												"employment_status": {
													"type": "string"
												},
												"state": {
													"type": "string"
												},
												"team_member_id": {
													"type": "string"
												},
												"name": {
													"type": "string"
												},
												"age": {
													"type": "integer"
												},
												"address": {
													"type": "string"
												},
												"address_oneline": {
													"type": "string"
												},
												"info": {
													"type": "string"
												},
												"background_check_user": {
													"type": "array"
												},
												"preferred_first_name": {
													"type": "string"
												},
												"available_by_default": {
													"type": "boolean"
												},
												"google2fa_enabled": {
													"type": "boolean"
												},
												"picture_status": {
													"type": "string"
												},
												"delete_requested": {
													"type": "boolean"
												},
												"updated_hours": {
													"type": "integer"
												},
												"login_locked": {
													"type": "boolean"
												},
												"duplicate_status": {
													"type": "string"
												}
											}
										},
										"relations": {
											"type": "object",
											"properties": {
												"user_checkpoint": {
													"type": "object",
													"properties": {
														"object": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "integer"
																},
																"user_checkpoint_type_id": {
																	"type": "null"
																},
																"name": {
																	"type": "string"
																},
																"label": {
																	"type": "null"
																},
																"permissions": {
																	"type": "object",
																	"properties": {
																		"all": {
																			"type": "string"
																		}
																	}
																},
																"actions": {
																	"type": "null"
																},
																"sort_order": {
																	"type": "integer"
																},
																"deleted_at": {
																	"type": "null"
																},
																"created_at": {
																	"type": "string"
																},
																"updated_at": {
																	"type": "string"
																}
															}
														},
														"nice": {
															"type": "object",
															"properties": {
																"count": {
																	"type": "integer"
																},
																"content_id": {
																	"type": "null"
																}
															}
														},
														"permissions": {
															"type": "object",
															"properties": {
																"read": {
																	"type": "boolean"
																},
																"update": {
																	"type": "boolean"
																},
																"delete": {
																	"type": "boolean"
																}
															}
														}
													}
												},
												"user_type": {
													"type": "object",
													"properties": {
														"object": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "integer"
																},
																"account_branding_id": {
																	"type": "null"
																},
																"name": {
																	"type": "string"
																},
																"code": {
																	"type": "string"
																},
																"profile_form_id": {
																	"type": "null"
																},
																"registration_form_id": {
																	"type": "null"
																},
																"shift_limit": {
																	"type": "integer"
																},
																"shift_max_time": {
																	"type": "null"
																},
																"max_shift_length": {
																	"type": "integer"
																},
																"min_shift_length": {
																	"type": "integer"
																},
																"gap_between_shifts": {
																	"type": "integer"
																},
																"deleted_at": {
																	"type": "null"
																},
																"created_at": {
																	"type": "string"
																},
																"updated_at": {
																	"type": "string"
																}
															}
														},
														"nice": {
															"type": "array"
														},
														"permissions": {
															"type": "object",
															"properties": {
																"read": {
																	"type": "boolean"
																},
																"update": {
																	"type": "boolean"
																},
																"delete": {
																	"type": "boolean"
																}
															}
														}
													}
												},
												"background_check_user": {
													"type": "array"
												},
												"vendor_id": {
													"type": "array"
												}
											}
										},
										"permissions": {
											"type": "object",
											"properties": {
												"read": {
													"type": "boolean"
												},
												"update": {
													"type": "boolean"
												},
												"delete": {
													"type": "boolean"
												},
												"impersonate": {
													"type": "boolean"
												}
											}
										},
										"attributes": {
											"type": "object",
											"properties": {
												"employment_status": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"label": {
															"type": "string"
														},
														"type": {
															"type": "string"
														}
													}
												},
												"state": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"label": {
															"type": "string"
														},
														"type": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								},
								"status": {
									"type": "object",
									"properties": {
										"object": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"name": {
													"type": "string"
												},
												"frontend_name": {
													"type": "string"
												},
												"type": {
													"type": "string"
												},
												"options": {
													"type": "object",
													"properties": {
														"color": {
															"type": "string"
														}
													}
												},
												"is_system": {
													"type": "integer"
												},
												"sort_order": {
													"type": "integer"
												},
												"deleted_at": {
													"type": "null"
												},
												"created_at": {
													"type": "string"
												},
												"updated_at": {
													"type": "string"
												}
											}
										},
										"nice": {
											"type": "object",
											"properties": {
												"type": {
													"type": "string"
												},
												"color_lightness": {
													"type": "integer"
												}
											}
										},
										"relations": {
											"type": "array"
										},
										"permissions": {
											"type": "object",
											"properties": {
												"read": {
													"type": "boolean"
												},
												"update": {
													"type": "boolean"
												},
												"delete": {
													"type": "boolean"
												}
											}
										}
									}
								}
							}
						},
						"permissions": {
							"type": "object",
							"properties": {
								"read": {
									"type": "boolean"
								},
								"update": {
									"type": "boolean"
								},
								"delete": {
									"type": "boolean"
								},
								"precheckin": {
									"type": "boolean"
								},
								"checkin": {
									"type": "boolean"
								}
							}
						},
						"attributes": {
							"type": "array"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Raw_Rosterfy_User_Binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy/User/Staging",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Source_Rosterfy_BookedShift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSRestRosterfy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "event/shift/user"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LSRestRosterfy')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Source_Rosterfy_Event')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSRestRosterfy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "event"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LSRestRosterfy')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Source_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSRestRosterfy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "event/shift"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LSRestRosterfy')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Source_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSRestRosterfy",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "user"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LSRestRosterfy')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Test_Exists')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Rosterfy",
						"fileSystem": "curated"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Test_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"parFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().parFile, '.parquet')",
							"type": "Expression"
						},
						"folderPath": "Rosterfy/User",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SurrogateKey",
						"type": "INT64"
					},
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "object_first_name",
						"type": "UTF8"
					},
					{
						"name": "object_middle_name",
						"type": "UTF8"
					},
					{
						"name": "object_last_name",
						"type": "UTF8"
					},
					{
						"name": "object_preferred_name",
						"type": "UTF8"
					},
					{
						"name": "object_is_subscribed",
						"type": "UTF8"
					},
					{
						"name": "is_unreachable",
						"type": "UTF8"
					},
					{
						"name": "object_terms",
						"type": "UTF8"
					},
					{
						"name": "rating",
						"type": "UTF8"
					},
					{
						"name": "object_shift_privacy",
						"type": "UTF8"
					},
					{
						"name": "object_is_team_leader",
						"type": "UTF8"
					},
					{
						"name": "object_email_verified",
						"type": "UTF8"
					},
					{
						"name": "last_login_at",
						"type": "UTF8"
					},
					{
						"name": "delete_requested_at",
						"type": "UTF8"
					},
					{
						"name": "deleted_at",
						"type": "UTF8"
					},
					{
						"name": "created_at",
						"type": "UTF8"
					},
					{
						"name": "updated_at",
						"type": "UTF8"
					},
					{
						"name": "object_team_member_id",
						"type": "UTF8"
					},
					{
						"name": "object_state",
						"type": "UTF8"
					},
					{
						"name": "object_employment_status",
						"type": "UTF8"
					},
					{
						"name": "nice_email_verified",
						"type": "UTF8"
					},
					{
						"name": "nice_first_name",
						"type": "UTF8"
					},
					{
						"name": "nice_is_subscribed",
						"type": "UTF8"
					},
					{
						"name": "nice_is_team_leader",
						"type": "UTF8"
					},
					{
						"name": "nice_last_name",
						"type": "UTF8"
					},
					{
						"name": "nice_middle_name",
						"type": "UTF8"
					},
					{
						"name": "nice_phone",
						"type": "UTF8"
					},
					{
						"name": "nice_preferred_name",
						"type": "UTF8"
					},
					{
						"name": "nice_shift_privacy",
						"type": "UTF8"
					},
					{
						"name": "nice_terms",
						"type": "UTF8"
					},
					{
						"name": "nice_employment_status",
						"type": "UTF8"
					},
					{
						"name": "nice_state",
						"type": "UTF8"
					},
					{
						"name": "nice_team_member_id",
						"type": "UTF8"
					},
					{
						"name": "nice_name",
						"type": "UTF8"
					},
					{
						"name": "age",
						"type": "UTF8"
					},
					{
						"name": "preferred_first_name",
						"type": "UTF8"
					},
					{
						"name": "available_by_default",
						"type": "UTF8"
					},
					{
						"name": "google2fa_enabled",
						"type": "UTF8"
					},
					{
						"name": "nice_picture_status",
						"type": "UTF8"
					},
					{
						"name": "delete_requested",
						"type": "UTF8"
					},
					{
						"name": "updated_hours",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LSRestRosterfy')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Rosterfy API via bearer token",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LSRestRosterfy_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "STLAnalytics_KeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "RosterfyAccessToken",
							"secretVersion": "ec0dc2e461064e268c135f8a331ba784"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/STLAnalytics_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ASA_KV_DataIntegration')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_ASA_KV_DataIntegration_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ASA_REST_Rosterfy')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Rosterfy API via bearer token",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_ASA_REST_Rosterfy_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "LS_ASA_KV_DataIntegration",
								"type": "LinkedServiceReference"
							},
							"secretName": "RosterfyAccessToken",
							"secretVersion": "ec0dc2e461064e268c135f8a331ba784"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_ASA_KV_DataIntegration')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ASA_ServerlessSQL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASA_ServerlessSQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ASQL_CONTROL')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_ASA_KV_DataIntegration",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_ASQL_CONTROL_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_ASA_KV_DataIntegration')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/STLAnalytics_KeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('STLAnalytics_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('datalake_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/stlsynapsedev-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('stlsynapsedev-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/stlsynapsedev-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('stlsynapsedev-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger Cleansed Rosterfy User')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Starts at 1510 UTC (0110 AEST or 0210 AEDT)",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Cleansed_Rosterfy_User",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-14T15:10:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PL_Cleansed_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger Curated Rosterfy User')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Starts at 1610 UTC (0210 AEST or 0310 AEDT)",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Curated_Rosterfy_User",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-14T16:10:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PL_Curated_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger Raw Rosterfy User')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Starts at 1410 UTC (0010 during AEST or 0110 during AEDT)",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Raw_Rosterfy_User",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-11T14:10:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PL_Raw_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Cleanse_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Raw_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "JSONRawRosterfyUser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "sinkToCSV"
						}
					],
					"transformations": [
						{
							"name": "replaceNewlineChar"
						},
						{
							"name": "mapJSONHierarchySubcolumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          object as (id as string, id_token as string, email as string, first_name as string, middle_name as string, last_name as string, preferred_name as string, phone as string, dob as string, picture as string, picture_status as integer, is_subscribed as integer, is_unreachable as integer, terms as integer, rating as string, shift_privacy as integer, is_team_leader as integer, email_verified as integer, verify_email_token as string, login_lockout_attempts as integer, login_lockout_at as string, login_lockout_email_sent_at as string, last_login_at as string, delete_requested_at as string, deleted_at as string, created_at as string, updated_at as string, team_member_id as string, state as string, employment_status as string, address as (iso as string, coordinates as (latitude as string, longitude as string), street_address_1 as string, street_address_2 as string, street_address_3 as string, city as string, postcode as string, region as string, country as string, latitude as string, longitude as string)),",
						"          nice as (rrn as string, email_verified as string, first_name as string, is_subscribed as string, is_team_leader as string, last_name as string, middle_name as string, phone as string, {phone:raw} as string, preferred_name as string, shift_privacy as string, terms as string, employment_status as string, state as string, team_member_id as string, name as string, age as integer, address as string, address_oneline as string, info as string, background_check_user as string[], preferred_first_name as string, available_by_default as boolean, google2fa_enabled as boolean, picture_status as string, delete_requested as boolean, updated_hours as integer, login_locked as boolean, duplicate_status as string),",
						"          relations as string[],",
						"          permissions as (read as boolean, update as boolean, delete as boolean, impersonate as boolean),",
						"          attributes as (employment_status as (name as string, label as string, type as string), state as (name as string, label as string, type as string))",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     backslashEscape: true) ~> JSONRawRosterfyUser",
						"mapJSONHierarchySubcolumns derive(nice_address = replace(nice_address, \"\\n\", \" \")) ~> replaceNewlineChar",
						"JSONRawRosterfyUser select(mapColumn(",
						"          each(object,match(true()),",
						"               'object_'+$$ = $$),",
						"          each(nice,match(true()),",
						"               'nice_'+$$ = $$),",
						"          each(permissions,match(true()),",
						"               'permissions_'+$$ = $$),",
						"          each(attributes.employment_status,match(true()),",
						"               'attributes_employment_status_'+$$ = $$),",
						"          each(attributes.state,match(true()),",
						"               'attributes_employment_state_'+$$ = $$),",
						"          each(object.address,match(true()),",
						"               'object_address_'+$$ = $$),",
						"          each(object.address.coordinates,match(true()),",
						"               'object_address_coordinates_'+$$ = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> mapJSONHierarchySubcolumns",
						"replaceNewlineChar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          object_id as string,",
						"          object_id_token as string,",
						"          object_email as string,",
						"          object_first_name as string,",
						"          object_middle_name as string,",
						"          object_last_name as string,",
						"          object_preferred_name as string,",
						"          object_phone as string,",
						"          object_dob as string,",
						"          object_picture as string,",
						"          object_picture_status as string,",
						"          object_is_subscribed as string,",
						"          object_is_unreachable as string,",
						"          object_terms as string,",
						"          object_rating as string,",
						"          object_shift_privacy as string,",
						"          object_is_team_leader as string,",
						"          object_email_verified as string,",
						"          object_verify_email_token as string,",
						"          object_login_lockout_attempts as string,",
						"          object_login_lockout_at as string,",
						"          object_login_lockout_email_sent_at as string,",
						"          object_last_login_at as string,",
						"          object_delete_requested_at as string,",
						"          object_deleted_at as string,",
						"          object_created_at as string,",
						"          object_updated_at as string,",
						"          object_team_member_id as string,",
						"          object_state as string,",
						"          object_employment_status as string,",
						"          object_address as string,",
						"          nice_rrn as string,",
						"          nice_email_verified as string,",
						"          nice_first_name as string,",
						"          nice_is_subscribed as string,",
						"          nice_is_team_leader as string,",
						"          nice_last_name as string,",
						"          nice_middle_name as string,",
						"          nice_phone as string,",
						"          {nice_phone:raw} as string,",
						"          nice_preferred_name as string,",
						"          nice_shift_privacy as string,",
						"          nice_terms as string,",
						"          nice_employment_status as string,",
						"          nice_state as string,",
						"          nice_team_member_id as string,",
						"          nice_name as string,",
						"          nice_age as string,",
						"          nice_address as string,",
						"          nice_address_oneline as string,",
						"          nice_info as string,",
						"          nice_background_check_user as string,",
						"          nice_preferred_first_name as string,",
						"          nice_available_by_default as string,",
						"          nice_google2fa_enabled as string,",
						"          nice_picture_status as string,",
						"          nice_delete_requested as string,",
						"          nice_updated_hours as string,",
						"          nice_login_locked as string,",
						"          nice_duplicate_status as string,",
						"          permissions_read as string,",
						"          permissions_update as string,",
						"          permissions_delete as string,",
						"          permissions_impersonate as string,",
						"          attributes_employment_status_name as string,",
						"          attributes_employment_status_label as string,",
						"          attributes_employment_status_type as string,",
						"          attributes_employment_state_name as string,",
						"          attributes_employment_state_label as string,",
						"          attributes_employment_state_type as string,",
						"          object_address_iso as string,",
						"          object_address_coordinates as string,",
						"          object_address_street_address_1 as string,",
						"          object_address_street_address_2 as string,",
						"          object_address_street_address_3 as string,",
						"          object_address_city as string,",
						"          object_address_postcode as string,",
						"          object_address_region as string,",
						"          object_address_country as string,",
						"          object_address_latitude as string,",
						"          object_address_longitude as string,",
						"          object_address_coordinates_latitude as string,",
						"          object_address_coordinates_longitude as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkToCSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Raw_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Curate_Rosterfy_Shift')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_Shift",
								"type": "DatasetReference"
							},
							"name": "RosterfyShift"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Curated_Rosterfy_Shift",
								"type": "DatasetReference"
							},
							"name": "SinkRosterfyShift"
						}
					],
					"transformations": [
						{
							"name": "AddDayOfShift"
						}
					],
					"script": "source(output(\n\t\tid as string,\n\t\tevent_id as string,\n\t\tobject_event_shift_type_id as string,\n\t\tmin_demand as string,\n\t\tmax_demand as string,\n\t\tleader_demand as string,\n\t\tobject_start_timestamp as string,\n\t\tobject_end_timestamp as string,\n\t\ttimezone as string,\n\t\tshift_confirmed_status_default as string,\n\t\tshift_rejected_status_default as string,\n\t\tshift_can_withdraw_default as string,\n\t\tshift_can_confirm_limit as string,\n\t\tshift_can_withdraw_limit as string,\n\t\tshift_checked_in_status_default as string,\n\t\tcertificate_id as string,\n\t\tobject_shift_application_form_id as string,\n\t\tobject_shift_checkin_form_id as string,\n\t\tobject_shift_attended_form_id as string,\n\t\tobject_shift_checkout_form_id as string,\n\t\tobject_shift_precheckin_form_id as string,\n\t\ttraining_ids as string,\n\t\tobject_role_offer_id as string,\n\t\tobject_role_offer_address as string,\n\t\tshift_enable_waitlist_default as string,\n\t\tmax_waitlist as string,\n\t\tminimum_dob as string,\n\t\tobject_minimum_age as string,\n\t\tobject_self_checkin as string,\n\t\tself_checkin_open as string,\n\t\tself_checkin_close as string,\n\t\tself_checkout_close as string,\n\t\tshift_precheckin_open as string,\n\t\tobject_post_feedback_form as string,\n\t\tobject_is_virtual as string,\n\t\tgeofence_checkin_limit as string,\n\t\tobject_publish as string,\n\t\tpublic as string,\n\t\tsort_order as string,\n\t\tis_cancelled as string,\n\t\tdeleted_at as string,\n\t\tcreated_at as string,\n\t\tupdated_at as string,\n\t\tobject_wish_sparkle_details as string,\n\t\tobject_wish_sparkle_name as string,\n\t\tobject_name as string,\n\t\tevent_shift_description as string,\n\t\tiso as string,\n\t\tobject_address_coordinates_latitude as string,\n\t\tobject_address_coordinates_longitude as string,\n\t\tstreet_address_1 as string,\n\t\tstreet_address_2 as string,\n\t\tstreet_address_3 as string,\n\t\tcity as string,\n\t\tpostcode as string,\n\t\tregion as string,\n\t\tcountry as string,\n\t\tobject_address_latitude as string,\n\t\tobject_address_longitude as string,\n\t\trrn as string,\n\t\tnice_end_timestamp as string,\n\t\tend_timestamp__date as string,\n\t\tend_timestamp__time as string,\n\t\tend_timestamp__offset as string,\n\t\tnice_event_shift_type_id as string,\n\t\t{event_shift_type_id:value} as string,\n\t\tnice_is_virtual as string,\n\t\tnice_minimum_age as string,\n\t\tnice_name as string,\n\t\tnice_post_feedback_form as string,\n\t\t{post_feedback_form:value} as string,\n\t\tnice_publish as string,\n\t\tnice_role_offer_address as string,\n\t\tnice_role_offer_id as string,\n\t\t{role_offer_id:value} as string,\n\t\tnice_self_checkin as string,\n\t\tnice_shift_application_form_id as string,\n\t\t{shift_application_form_id:value} as string,\n\t\tnice_shift_attended_form_id as string,\n\t\t{shift_attended_form_id:value} as string,\n\t\tnice_shift_checkin_form_id as string,\n\t\t{shift_checkin_form_id:value} as string,\n\t\tnice_shift_checkout_form_id as string,\n\t\t{shift_checkout_form_id:value} as string,\n\t\tnice_shift_precheckin_form_id as string,\n\t\t{shift_precheckin_form_id:value} as string,\n\t\tnice_start_timestamp as string,\n\t\tstart_timestamp__date as string,\n\t\tstart_timestamp__time as string,\n\t\tstart_timestamp__offset as string,\n\t\tvisibility_hide_groups as string,\n\t\tvisibility_show_groups as string,\n\t\tnice_wish_sparkle_details as string,\n\t\tnice_wish_sparkle_name as string,\n\t\tinfo as string,\n\t\tevent_shift_link_id as string,\n\t\taccount_id as string,\n\t\taccount_url as string,\n\t\tshift_type_name as string,\n\t\tpost_shift_feedback_form_completed_at as string,\n\t\tpre_checkin_form_completed_at as string,\n\t\tevent_name as string,\n\t\taddress as string,\n\t\taddress_oneline as string,\n\t\tread as string,\n\t\tupdate as string,\n\t\tdelete as string,\n\t\tapply as string,\n\t\tapply_error as string,\n\t\tapply_error_code as string,\n\t\tconfirm as string,\n\t\treject as string,\n\t\tselfCheckin as string,\n\t\tselfCheckout as string,\n\t\tsubmitAttendedForm as string,\n\t\tprecheckin as string,\n\t\tapplyWaitlist as string,\n\t\tcancel as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tmultiLineRow: true) ~> RosterfyShift\nRosterfyShift derive(day_of_shift = toDate(object_start_timestamp)) ~> AddDayOfShift\nAddDayOfShift sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tmapColumn(\n\t\tid,\n\t\tevent_id,\n\t\tobject_name,\n\t\tday_of_shift,\n\t\tnice_wish_sparkle_name,\n\t\tnice_wish_sparkle_details\n\t)) ~> SinkRosterfyShift"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_Shift')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_Shift')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Curate_Rosterfy_User')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "DSCleansedRosterfyUser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Curated_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "sinkRosterfyUser"
						}
					],
					"transformations": [
						{
							"name": "selectColumnsToSink"
						},
						{
							"name": "addRowHash"
						},
						{
							"name": "AddSurrogateKey"
						},
						{
							"name": "addDateColumn"
						}
					],
					"scriptLines": [
						"parameters{",
						"     DFParamPLTriggerTime as timestamp (toTimestamp('1999-01-01 00:00:01'))",
						"}",
						"source(output(",
						"          object_id as string,",
						"          object_id_token as string,",
						"          object_email as string,",
						"          object_first_name as string,",
						"          object_middle_name as string,",
						"          object_last_name as string,",
						"          object_preferred_name as string,",
						"          object_phone as string,",
						"          object_dob as string,",
						"          object_picture as string,",
						"          object_picture_status as string,",
						"          object_is_subscribed as string,",
						"          object_is_unreachable as string,",
						"          object_terms as string,",
						"          object_rating as string,",
						"          object_shift_privacy as string,",
						"          object_is_team_leader as string,",
						"          object_email_verified as string,",
						"          object_verify_email_token as string,",
						"          object_login_lockout_attempts as string,",
						"          object_login_lockout_at as string,",
						"          object_login_lockout_email_sent_at as string,",
						"          object_last_login_at as string,",
						"          object_delete_requested_at as string,",
						"          object_deleted_at as string,",
						"          object_created_at as string,",
						"          object_updated_at as string,",
						"          object_team_member_id as string,",
						"          object_state as string,",
						"          object_employment_status as string,",
						"          object_address as string,",
						"          nice_rrn as string,",
						"          nice_email_verified as string,",
						"          nice_first_name as string,",
						"          nice_is_subscribed as string,",
						"          nice_is_team_leader as string,",
						"          nice_last_name as string,",
						"          nice_middle_name as string,",
						"          nice_phone as string,",
						"          {nice_phone:raw} as string,",
						"          nice_preferred_name as string,",
						"          nice_shift_privacy as string,",
						"          nice_terms as string,",
						"          nice_employment_status as string,",
						"          nice_state as string,",
						"          nice_team_member_id as string,",
						"          nice_name as string,",
						"          nice_age as string,",
						"          nice_address as string,",
						"          nice_address_oneline as string,",
						"          nice_info as string,",
						"          nice_background_check_user as string,",
						"          nice_preferred_first_name as string,",
						"          nice_available_by_default as string,",
						"          nice_google2fa_enabled as string,",
						"          nice_picture_status as string,",
						"          nice_delete_requested as string,",
						"          nice_updated_hours as string,",
						"          nice_login_locked as string,",
						"          nice_duplicate_status as string,",
						"          permissions_read as string,",
						"          permissions_update as string,",
						"          permissions_delete as string,",
						"          permissions_impersonate as string,",
						"          attributes_employment_status_name as string,",
						"          attributes_employment_status_label as string,",
						"          attributes_employment_status_type as string,",
						"          attributes_employment_state_name as string,",
						"          attributes_employment_state_label as string,",
						"          attributes_employment_state_type as string,",
						"          object_address_iso as string,",
						"          object_address_coordinates as string,",
						"          object_address_street_address_1 as string,",
						"          object_address_street_address_2 as string,",
						"          object_address_street_address_3 as string,",
						"          object_address_city as string,",
						"          object_address_postcode as string,",
						"          object_address_region as string,",
						"          object_address_country as string,",
						"          object_address_latitude as string,",
						"          object_address_longitude as string,",
						"          object_address_coordinates_latitude as string,",
						"          object_address_coordinates_longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DSCleansedRosterfyUser",
						"DSCleansedRosterfyUser select(mapColumn(",
						"          id = object_id,",
						"          email = object_email,",
						"          object_first_name,",
						"          object_middle_name,",
						"          object_last_name,",
						"          object_preferred_name,",
						"          object_is_subscribed,",
						"          is_unreachable = object_is_unreachable,",
						"          object_terms,",
						"          rating = object_rating,",
						"          object_shift_privacy,",
						"          object_is_team_leader,",
						"          object_email_verified,",
						"          last_login_at = object_last_login_at,",
						"          delete_requested_at = object_delete_requested_at,",
						"          deleted_at = object_deleted_at,",
						"          created_at = object_created_at,",
						"          updated_at = object_updated_at,",
						"          object_team_member_id,",
						"          object_state,",
						"          object_employment_status,",
						"          nice_email_verified,",
						"          nice_first_name,",
						"          nice_is_subscribed,",
						"          nice_is_team_leader,",
						"          nice_last_name,",
						"          nice_middle_name,",
						"          nice_phone,",
						"          nice_preferred_name,",
						"          nice_shift_privacy,",
						"          nice_terms,",
						"          nice_employment_status,",
						"          nice_state,",
						"          nice_team_member_id,",
						"          nice_name,",
						"          age = nice_age,",
						"          preferred_first_name = nice_preferred_first_name,",
						"          available_by_default = nice_available_by_default,",
						"          google2fa_enabled = nice_google2fa_enabled,",
						"          nice_picture_status,",
						"          delete_requested = object_delete_requested_at,",
						"          updated_hours = nice_updated_hours",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumnsToSink",
						"selectColumnsToSink derive(rowHash = sha2(256, columns())) ~> addRowHash",
						"addDateColumn keyGenerate(output(SurrogateKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddSurrogateKey",
						"addRowHash derive(InsertedOn = $DFParamPLTriggerTime) ~> addDateColumn",
						"AddSurrogateKey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkRosterfyUser"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Curate_Rosterfy_User_Incr')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Cleansed_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "todayCleansedData"
						},
						{
							"dataset": {
								"referenceName": "DS_LogicalDW",
								"type": "DatasetReference"
							},
							"name": "allRosterfyUser"
						},
						{
							"dataset": {
								"referenceName": "DS_LogicalDW",
								"type": "DatasetReference"
							},
							"name": "getMaxSurrKey"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Curated_Rosterfy_User",
								"type": "DatasetReference"
							},
							"name": "sinkIncrementalData"
						},
						{
							"name": "cacheMaxSurrKey"
						}
					],
					"transformations": [
						{
							"name": "selectCuratedColumns"
						},
						{
							"name": "addRowHash"
						},
						{
							"name": "AddSurrogateKey"
						},
						{
							"name": "keepRowHash"
						},
						{
							"name": "chkNewRows"
						},
						{
							"name": "seedSurrogateKey"
						},
						{
							"name": "addDateColumn"
						}
					],
					"scriptLines": [
						"parameters{",
						"     DFParamPLTriggerTime as timestamp (toTimestamp('1999-01-01 00:00:01'))",
						"}",
						"source(output(",
						"          object_id as string,",
						"          object_id_token as string,",
						"          object_email as string,",
						"          object_first_name as string,",
						"          object_middle_name as string,",
						"          object_last_name as string,",
						"          object_preferred_name as string,",
						"          object_phone as string,",
						"          object_dob as string,",
						"          object_picture as string,",
						"          object_picture_status as string,",
						"          object_is_subscribed as string,",
						"          object_is_unreachable as string,",
						"          object_terms as string,",
						"          object_rating as string,",
						"          object_shift_privacy as string,",
						"          object_is_team_leader as string,",
						"          object_email_verified as string,",
						"          object_verify_email_token as string,",
						"          object_login_lockout_attempts as string,",
						"          object_login_lockout_at as string,",
						"          object_login_lockout_email_sent_at as string,",
						"          object_last_login_at as string,",
						"          object_delete_requested_at as string,",
						"          object_deleted_at as string,",
						"          object_created_at as string,",
						"          object_updated_at as string,",
						"          object_team_member_id as string,",
						"          object_state as string,",
						"          object_employment_status as string,",
						"          object_address as string,",
						"          nice_rrn as string,",
						"          nice_email_verified as string,",
						"          nice_first_name as string,",
						"          nice_is_subscribed as string,",
						"          nice_is_team_leader as string,",
						"          nice_last_name as string,",
						"          nice_middle_name as string,",
						"          nice_phone as string,",
						"          {nice_phone:raw} as string,",
						"          nice_preferred_name as string,",
						"          nice_shift_privacy as string,",
						"          nice_terms as string,",
						"          nice_employment_status as string,",
						"          nice_state as string,",
						"          nice_team_member_id as string,",
						"          nice_name as string,",
						"          nice_age as string,",
						"          nice_address as string,",
						"          nice_address_oneline as string,",
						"          nice_info as string,",
						"          nice_background_check_user as string,",
						"          nice_preferred_first_name as string,",
						"          nice_available_by_default as string,",
						"          nice_google2fa_enabled as string,",
						"          nice_picture_status as string,",
						"          nice_delete_requested as string,",
						"          nice_updated_hours as string,",
						"          nice_login_locked as string,",
						"          nice_duplicate_status as string,",
						"          permissions_read as string,",
						"          permissions_update as string,",
						"          permissions_delete as string,",
						"          permissions_impersonate as string,",
						"          attributes_employment_status_name as string,",
						"          attributes_employment_status_label as string,",
						"          attributes_employment_status_type as string,",
						"          attributes_employment_state_name as string,",
						"          attributes_employment_state_label as string,",
						"          attributes_employment_state_type as string,",
						"          object_address_iso as string,",
						"          object_address_coordinates as string,",
						"          object_address_street_address_1 as string,",
						"          object_address_street_address_2 as string,",
						"          object_address_street_address_3 as string,",
						"          object_address_city as string,",
						"          object_address_postcode as string,",
						"          object_address_region as string,",
						"          object_address_country as string,",
						"          object_address_latitude as string,",
						"          object_address_longitude as string,",
						"          object_address_coordinates_latitude as string,",
						"          object_address_coordinates_longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> todayCleansedData",
						"source(output(",
						"          isCurrent as long,",
						"          id as string,",
						"          rowHash as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT isCurrent, id, rowHash \\nFROM (\\nSELECT \\nRANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent \\n,id\\n,rowHash\\nFROM LDW.vwRosterfyUser\\n) as t\\nwhere isCurrent = 1',",
						"     format: 'query') ~> allRosterfyUser",
						"source(output(",
						"          maxSurrogateKey as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT max(SurrogateKey) AS maxSurrogateKey FROM LDW.vwRosterfyUser',",
						"     format: 'query') ~> getMaxSurrKey",
						"todayCleansedData select(mapColumn(",
						"          id = object_id,",
						"          email = object_email,",
						"          object_first_name,",
						"          object_middle_name,",
						"          object_last_name,",
						"          object_preferred_name,",
						"          object_is_subscribed,",
						"          is_unreachable = object_is_unreachable,",
						"          object_terms,",
						"          rating = object_rating,",
						"          object_shift_privacy,",
						"          object_is_team_leader,",
						"          object_email_verified,",
						"          last_login_at = object_last_login_at,",
						"          delete_requested_at = object_delete_requested_at,",
						"          deleted_at = object_deleted_at,",
						"          created_at = object_created_at,",
						"          updated_at = object_updated_at,",
						"          object_team_member_id,",
						"          object_state,",
						"          object_employment_status,",
						"          nice_email_verified,",
						"          nice_first_name,",
						"          nice_is_subscribed,",
						"          nice_is_team_leader,",
						"          nice_last_name,",
						"          nice_middle_name,",
						"          nice_phone,",
						"          nice_preferred_name,",
						"          nice_shift_privacy,",
						"          nice_terms,",
						"          nice_employment_status,",
						"          nice_state,",
						"          nice_team_member_id,",
						"          nice_name,",
						"          age = nice_age,",
						"          preferred_first_name = nice_preferred_first_name,",
						"          available_by_default = nice_available_by_default,",
						"          google2fa_enabled = nice_google2fa_enabled,",
						"          nice_picture_status,",
						"          delete_requested = object_delete_requested_at,",
						"          updated_hours = nice_updated_hours",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectCuratedColumns",
						"selectCuratedColumns derive(rowHash = sha2(256, columns())) ~> addRowHash",
						"addDateColumn keyGenerate(output(SurrogateKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddSurrogateKey",
						"allRosterfyUser select(mapColumn(",
						"          rowHash",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> keepRowHash",
						"addRowHash, keepRowHash exists(addRowHash@rowHash==keepRowHash@rowHash,",
						"     negate:true,",
						"     broadcast: 'auto')~> chkNewRows",
						"AddSurrogateKey derive(SurrogateKey = SurrogateKey + cacheMaxSurrKey#outputs()[1].maxSurrogateKey) ~> seedSurrogateKey",
						"chkNewRows derive(InsertedOn = $DFParamPLTriggerTime) ~> addDateColumn",
						"seedSurrogateKey sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkIncrementalData",
						"getMaxSurrKey sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> cacheMaxSurrKey"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Cleansed_Rosterfy_User')]",
				"[concat(variables('workspaceId'), '/datasets/DS_LogicalDW')]",
				"[concat(variables('workspaceId'), '/datasets/DS_Curated_Rosterfy_User')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Analyze Azure Open Datasets using serverless SQL pool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "EDA Demo"
				},
				"content": {
					"query": "/*\nFull tutorial available on: https://docs.microsoft.com/en-us/azure/synapse-analytics/sql/tutorial-data-analyst\nIn this tutorial, you learn how to perform exploratory data analysis by combining different Azure Open Datasets using serverless SQL pool and then visualizing the results in Azure Synapse Studio.\n\nIn particular, you analyze the New York City (NYC) Taxi dataset that includes:\n\n - Pickup and drop-off dates and times.\n - Pick up and drop-off locations.\n - Trip distances.\n - Itemized fares.\n - Rate types.\n - Payment types.\n - Driver-reported passenger counts.*/\n\n\n/*\n * * * * * * * * * * * * * * * *\n * Automatic schema inference  *\n * * * * * * * * * * * * * * * *\n\nSince data is stored in the Parquet file format, automatic schema inference is available. You can easily query the data without listing the data types of all columns in the files. You also can use the virtual column mechanism and the filepath function to filter out a certain subset of files.\n\nLet's first get familiar with the NYC Taxi data by running the following query. */\n\nSELECT TOP 100 * FROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [nyc];\n\n\n/* Similarly, you can query the Public Holidays dataset by using the following query. */\n\nSELECT TOP 100 * FROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/holidaydatacontainer/Processed/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [holidays];\n\n/* Lastly, you can also query the Weather Data dataset by using the following query. */\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/isdweatherdatacontainer/ISDWeather/year=*/month=*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [weather];\n\n/* You can learn more about the meaning of the individual columns in the descriptions\nof the NYC Taxi, Public Holidays, and Weather Data datasets on the Azure Opendatasets page. */\n\n\n/*\n * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Time series, seasonality, and outlier analysis  *\n * * * * * * * * * * * * * * * * * * * * * * * * * *\nYou can easily summarize the yearly number of taxi rides by using the following query. */\n\nSELECT\n    YEAR(tpepPickupDateTime) AS current_year,\n    COUNT(*) AS rides_per_year\nFROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [nyc]\nWHERE nyc.filepath(1) >= '2009' AND nyc.filepath(1) <= '2019'\nGROUP BY YEAR(tpepPickupDateTime)\nORDER BY 1 ASC;\n\n/* The data can be visualized in Synapse Studio by switching from the Table to the Chart view.\nYou can choose among different chart types, such as Area, Bar, Column, Line, Pie, and Scatter.\nIn this case, plot the Column chart with the Category column set to current_year.\n\nFrom this visualization, a trend of a decreasing number of rides over years can be clearly seen.\nPresumably, this decrease is due to the recent increased popularity of ride-sharing companies.\n*/\n\n/* Next, let's focus the analysis on a single year, for example, 2016.\nThe following query returns the daily number of rides during that year. */\n\nSELECT\n    CAST([tpepPickupDateTime] AS DATE) AS [current_day],\n    COUNT(*) as rides_per_day\nFROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [nyc]\nWHERE nyc.filepath(1) = '2016'\nGROUP BY CAST([tpepPickupDateTime] AS DATE)\nORDER BY 1 ASC;\n\n/* Again, you can easily visualize data by plotting the Column chart with\nthe Category column set to current_day and the Legend (series) column set to rides_per_day. */\n\n/* From the plot chart, you can see that there's a weekly pattern, with Saturdays as the peak day.\nDuring summer months, there are fewer taxi rides because of vacations.\nThere are also some significant drops in the number of taxi rides without a clear pattern of when and why they occur. */\n\n/* Next, let's see if the drops correlate with public holidays by joining the NYC Taxi rides dataset with the Public Holidays dataset. */\n\nWITH taxi_rides AS\n(\n    SELECT\n        CAST([tpepPickupDateTime] AS DATE) AS [current_day],\n        COUNT(*) as rides_per_day\n    FROM\n        OPENROWSET(\n            BULK 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/puYear=*/puMonth=*/*.parquet',\n            FORMAT='PARQUET'\n        ) AS [nyc]\n    WHERE nyc.filepath(1) = '2016'\n    GROUP BY CAST([tpepPickupDateTime] AS DATE)\n),\npublic_holidays AS\n(\n    SELECT\n        holidayname as holiday,\n        date\n    FROM\n        OPENROWSET(\n            BULK 'https://azureopendatastorage.blob.core.windows.net/holidaydatacontainer/Processed/*.parquet',\n            FORMAT='PARQUET'\n        ) AS [holidays]\n    WHERE countryorregion = 'United States' AND YEAR(date) = 2016\n)\nSELECT\n*\nFROM taxi_rides t\nLEFT OUTER JOIN public_holidays p on t.current_day = p.date\nORDER BY current_day ASC;\n\n/* This time, we want to highlight the number of taxi rides during public holidays.\nFor that purpose, we choose none for the Category column and rides_per_day and holiday as the Legend (series) columns. */\n\n/* From the plot chart, you can see that during public holidays the number of taxi rides is lower.\nThere's still one unexplained large drop on January 23. Let's check the weather in NYC on that day by querying the Weather Data dataset. */\n\nSELECT\n    AVG(windspeed) AS avg_windspeed,\n    MIN(windspeed) AS min_windspeed,\n    MAX(windspeed) AS max_windspeed,\n    AVG(temperature) AS avg_temperature,\n    MIN(temperature) AS min_temperature,\n    MAX(temperature) AS max_temperature,\n    AVG(sealvlpressure) AS avg_sealvlpressure,\n    MIN(sealvlpressure) AS min_sealvlpressure,\n    MAX(sealvlpressure) AS max_sealvlpressure,\n    AVG(precipdepth) AS avg_precipdepth,\n    MIN(precipdepth) AS min_precipdepth,\n    MAX(precipdepth) AS max_precipdepth,\n    AVG(snowdepth) AS avg_snowdepth,\n    MIN(snowdepth) AS min_snowdepth,\n    MAX(snowdepth) AS max_snowdepth\nFROM\n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/isdweatherdatacontainer/ISDWeather/year=*/month=*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [weather]\nWHERE countryorregion = 'US' AND CAST([datetime] AS DATE) = '2016-01-23' AND stationname = 'JOHN F KENNEDY INTERNATIONAL AIRPORT';\n\n/* The results of the query indicate that the drop in the number of taxi rides occurred because:\n\n1. There was a blizzard on that day in NYC with heavy snow (~30 cm).\n2. It was cold (temperature was below zero degrees Celsius).\n3. It was windy (~10 m/s). */\n\n\n/* This tutorial has shown how a data analyst can quickly perform exploratory data analysis, easily combine different\ndatasets by using serverless SQL pool, and visualize the results by using Azure Synapse Studio. */\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataverse Query')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SQL Serverless"
				},
				"content": {
					"query": "select top 10 * \nfrom dataverse_retrofitdev_unqafc25f60ecc7435a91ff9aabe7355.dbo.account a\nwhere CHARINDEX('@starlight.org.au', a.emailaddress1) > 0\n;\n\nselect top 20 * from RosterfyLakehouse.rfy.extRosterfyUser\nWHERE object_first_name = 'Evangeline'\n;\n\n--cross database queries - supported by serverless SQL pools\n--The queries can reference the serverless SQL databases or the Lake databases in the same workspace. Cross-workspace queries are not supported.\nselect top 50 \nb.*,\na.*\nfrom dataverse_retrofitdev_unqafc25f60ecc7435a91ff9aabe7355.dbo.account a\n       INNER JOIN RosterfyLakehouse.rfy.extRosterfyUser b ON a.emailaddress1 = b.email\n;\n\n\nselect top 100 AttributeName, AttributeType, AttributeTypeCode, Version, Timestamp, MetadataId, Precision, MaxLength  \nfrom openrowset(bulk 'https://stldatalakedev.dfs.core.windows.net/dataverse-retrofitdev-unqafc25f60ecc7435a91ff9aabe7355/Microsoft.Athena.TrickleFeedService/email-EntityMetadata.json', \n       FORMAT = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b',\n        rowterminator = '0x0b'\n    ) with (doc nvarchar(max)) AS rows\n    cross apply openjson(doc, '$.AttributeMetadata')\n    with (\n            AttributeName nvarchar(100) '$.AttributeName',\n            AttributeType nvarchar(400) '$.AttributeType',\n            AttributeTypeCode int '$.AttributeTypeCode',\n            Version int '$.Version',\n            Timestamp nvarchar(50) '$.Timestamp',\n            MetadataId nvarchar(50) '$.Timestamp',\n            Precision int '$.Precision',\n            MaxLength int '$.MaxLength'\n    ) \n;\n\nwith CTE (AttributeName, AttributeType, AttributeTypeCode, Version, Timestamp, MetadataId, Precision, MaxLength )\nas \n(\nselect AttributeName, AttributeType, AttributeTypeCode, Version, Timestamp, MetadataId, Precision, MaxLength \nfrom openrowset(bulk 'https://stldatalakedev.dfs.core.windows.net/dataverse-retrofitdev-unqafc25f60ecc7435a91ff9aabe7355/Microsoft.Athena.TrickleFeedService/email-EntityMetadata.json', \n       FORMAT = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b',\n        rowterminator = '0x0b'\n    ) with (doc nvarchar(max)) AS rows\n    cross apply openjson(doc, '$.AttributeMetadata')\n    with (\n            AttributeName nvarchar(100) '$.AttributeName',\n            AttributeType nvarchar(400) '$.AttributeType',\n            AttributeTypeCode int '$.AttributeTypeCode',\n            Version int '$.Version',\n            Timestamp nvarchar(50) '$.Timestamp',\n            MetadataId nvarchar(50) '$.Timestamp',\n            Precision int '$.Precision',\n            MaxLength int '$.MaxLength'\n    ) \n)\nselect * \nfrom cte\nwhere cte.AttributeName = 'sender'\n;\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Modify Data Types')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SQL Serverless"
				},
				"content": {
					"query": "\nCREATE EXTERNAL TABLE [LDW].[extRosterfyUserNEW4] WITH (\n        LOCATION = 'Rosterfy/User/CETASNEW4',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM\n(\n    SELECT\n    RANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent\n     --, *\n    ,id\n    ,email\n    ,object_first_name\n    ,object_last_name\n    ,object_team_member_id\n    ,object_employment_status\n    ,object_state\n    ,nice_name\n    ,updated_hours\n    ,CONVERT(datetime, created_at, 120) as createdAt\n    ,updated_at\n\n    FROM \n    OPENROWSET(\n        BULK 'Rosterfy/User/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT = 'PARQUET'\n    ) WITH (\n        id varchar(20),\n        email varchar(100),\n        object_first_name varchar(50),\n        object_last_name varchar(50),\n        object_team_member_id varchar(50),\n        object_employment_status varchar(50),\n        object_state varchar(20),\n        nice_name varchar(100),\n        updated_hours varchar(20),\n        created_at varchar(20),\n        updated_at varchar(20),\n        InsertedOn varchar(30)\n    )  AS r\n) AS t\nWHERE isCurrent = 1\n;\n\nSELECT top 20 * FROM [LDW].[vwRosterfyUser];\n\nWHERE object_first_name = 'Gavin';",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "logicalDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RosterfyLakehouse')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SQL Serverless"
				},
				"content": {
					"query": "--DROP DATABASE RosterfyLakehouse;\n\nCREATE DATABASE RosterfyLakehouse COLLATE Latin1_General_100_BIN2_UTF8;\n\nUSE RosterfyLakehouse;\nGO\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = '2A4iTR622$Aa29M*5s!RFouT8Fd^WtkE';\n\nCREATE DATABASE SCOPED CREDENTIAL WorkspaceIdentity\nWITH IDENTITY = 'Managed Identity';\nGO\nCREATE EXTERNAL DATA SOURCE ExtDSCurated WITH (\n    LOCATION = 'https://stldatalakedev.dfs.core.windows.net/curated/Rosterfy/',\n    CREDENTIAL = WorkspaceIdentity\n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET );\n\nCREATE SCHEMA rfy;\n\n-- prepare view for Rosterfy User\nDROP VIEW IF EXISTS rfy.vwRosterfyUser;\n\nCREATE VIEW rfy.vwRosterfyUser AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'User/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRU;\n\n-- prepare view for Rosterfy BookedShift\nDROP VIEW IF EXISTS rfy.vwRosterfyBookedShift;\nGO;\n\nCREATE VIEW rfy.vwRosterfyBookedShift AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'BookedShift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRBS;\n\n\n-- prepare view for Rosterfy Shift\nDROP VIEW IF EXISTS rfy.vwRosterfyShift;\nGO;\n\nCREATE VIEW rfy.vwRosterfyShift AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'Shift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRBS;\n\n--select top 20 * from rfy.vwRosterfyShift;\n\n-- prepare view for Rosterfy Event\nDROP VIEW IF EXISTS rfy.vwRosterfyEvent;\nGO;\n\nCREATE VIEW rfy.vwRosterfyEvent AS\nSELECT\n    *\nFROM\n    OPENROWSET(        \n        BULK 'Event/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRos;\n\n\nselect top 20 * from rfy.vwRosterfyUser;\n\n--cross database queries - supported by serverless SQL pools\n--The queries can reference the serverless SQL databases or the Lake databases in the same workspace. Cross-workspace queries are not supported.\nselect top 50\na.id,\na.email,\nb.object_first_name,\nb.object_last_name\nfrom rfy.vwRosterfyUser a inner join logicalDW.LDW.vwRosterfyUser b\nON a.id = b.id\n;\n\nselect top 20 * from rfy.vwRosterfyUser\nWHERE object_first_name = 'Jason'\n;\n--where InsertedOn='2022-03-17T23:25:39.8930000';\n\n\n--create a table of curated columns to expose as SQL tables via serverless SQL endpoint \n--only serve up data rows which are current (where isCurrent=1)\n--subfolder in lake must not exist (delete with ADF)\nCREATE EXTERNAL TABLE [rfy].[extRosterfyUser] WITH (\n        LOCATION = 'CETAS/User',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM\n(\n    SELECT\n    RANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent\n     --, *\n    ,id\n    ,email\n    ,object_first_name\n    ,object_last_name\n    ,object_team_member_id\n    ,object_employment_status\n    ,object_state\n    ,nice_name\n    ,updated_hours\n    ,created_at\n    ,updated_at\n\n    FROM \n    OPENROWSET(\n        BULK 'User/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT = 'PARQUET'\n    )  AS r\n) AS t\nWHERE isCurrent = 1\n;\n\n--returns only the most up-to-date row for Jason\nselect top 20 * from rfy.extRosterfyUser\nWHERE object_first_name = 'Jason'\n;\n\n\nselect count(*) as cnt from [rfy].[extRosterfyUser];\n\n--CETAS Rosterfy BookedShift\nCREATE EXTERNAL TABLE [rfy].[extRosterfyBookedShift] WITH (\n        LOCATION = 'CETAS/BookedShift',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM \n    OPENROWSET(\n        BULK 'BookedShift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n) AS r\n;\n\nselect top 20 * from rfy.extRosterfyBookedShift;\n\n--CETAS Rosterfy Shift\nCREATE EXTERNAL TABLE [rfy].[extRosterfyShift] WITH (\n        LOCATION = 'CETAS/Shift',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM \n    OPENROWSET(\n        BULK 'Shift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n) AS r\n;\n\nselect top 20 * from rfy.extRosterfyShift;\n\n\n--CETAS Rosterfy Event\nCREATE EXTERNAL TABLE [rfy].[extRosterfyEvent] WITH (\n        LOCATION = 'CETAS/Event',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM \n    OPENROWSET(\n        BULK 'Event/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n) AS r\n;\n\nselect top 20 * from rfy.extRosterfyEvent;\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "RosterfyLakehouse",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless SQL query1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SQL Serverless"
				},
				"content": {
					"query": "--DROP DATABASE logicalDW;\n\nCREATE DATABASE logicalDW COLLATE Latin1_General_100_BIN2_UTF8;\n\nUSE logicalDW;\nGO\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = '2A4iTR622$Aa29M*5s!LDouT8Fd^WtkE';\n\nCREATE DATABASE SCOPED CREDENTIAL WorkspaceIdentity\nWITH IDENTITY = 'Managed Identity';\nGO\nCREATE EXTERNAL DATA SOURCE ExtDSCurated WITH (\n    LOCATION = 'https://stldatalakedev.dfs.core.windows.net/curated/',\n    CREDENTIAL = WorkspaceIdentity\n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET );\n\nselect top 10 *\nfrom openrowset(bulk 'Rosterfy/*.parquet',\n                data_source = 'ExtDSCurated',\n                format='parquet') as a\n;\n\nCREATE SCHEMA LDW;\n\n-- prepare view for Rosterfy User\nDROP VIEW IF EXISTS LDW.vwRosterfyUser;\nGO\n\nCREATE VIEW LDW.vwRosterfyUser AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        --BULK 'Rosterfy/RosterfyUser.parquet',\n        BULK 'Rosterfy/User/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRU;\n\nselect top 20 * from LDW.vwRosterfyUser;\n\n-- prepare view for Rosterfy BookedShift\nDROP VIEW IF EXISTS LDW.vwRosterfyBookedShift;\nGO\n\nCREATE VIEW LDW.vwRosterfyBookedShift AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        --BULK 'Rosterfy/RosterfyBookedShift.parquet',\n        BULK 'Rosterfy/BookedShift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRBS;\n\nselect top 20 * from LDW.vwRosterfyBookedShift;\n\n-- prepare view for Rosterfy Shift\nDROP VIEW IF EXISTS LDW.vwRosterfyShift;\nGO\n\nCREATE VIEW LDW.vwRosterfyShift AS\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'Rosterfy/Shift/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRBS;\n\nselect top 20 * from LDW.vwRosterfyShift;\n\n-- prepare view for Rosterfy Event\nDROP VIEW IF EXISTS LDW.vwRosterfyEvent;\nGO\n\nCREATE VIEW LDW.vwRosterfyEvent AS\nSELECT\n    *\nFROM\n    OPENROWSET(        \n        BULK 'Rosterfy/Event/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT='PARQUET'\n    ) AS vwRos;\n\nselect top 20 * from LDW.vwRosterfyEvent;\n\n\ndrop EXTERNAL table [LDW].[RosterfyUserCETAS];\n\nCREATE EXTERNAL TABLE [LDW].[RosterfyUserCETAS] WITH (\n        LOCATION = 'Rosterfy/User/UserParquet',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT *\nFROM\n    OPENROWSET(\n        BULK 'Rosterfy/RosterfyUser.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT = 'PARQUET'\n    )  AS r;\n\nselect top 100 *\nfrom openrowset(bulk 'Rosterfy/User/UserParquet/*.parquet',\n                data_source = 'ExtDSCurated',\n                format='parquet') as b\n;\n\n\nSELECT max(SurrogateKey) FROM LDW.vwRosterfyUser\n;\n\nselect * \nfrom openrowset(bulk 'Rosterfy/User/*.parquet',\n                data_source = 'ExtDSCurated',\n                format='parquet') as a\n                \n;\n\nSELECT max(SurrogateKey) AS maxSurrogateKey FROM LDW.vwRosterfyUser;\n\nSELECT * FROM LDW.vwRosterfyUser;\n\nselect max(SurrogateKey) as maxSK\nfrom openrowset(bulk 'Rosterfy/part*.parquet',\n                data_source = 'ExtDSCurated',\n                format='parquet') as a\n;\n\n\nSELECT \nRANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent\n,SurrogateKey \n,id\n,email\n,object_first_name\n,InsertedOn\nFROM [LDW].[vwRosterfyUser]\n;\n\n\n\nCREATE EXTERNAL TABLE [LDW].[extRosterfyUserNEW1] WITH (\n        LOCATION = 'Rosterfy/CETAS/UserNEW1',\n        DATA_SOURCE = ExtDSCurated,\n        FILE_FORMAT = ParquetFormat\n) AS\nSELECT\n    *\nFROM\n(\n    SELECT\n    RANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent\n     --, *\n    ,id\n    ,email\n    ,object_first_name\n    ,object_last_name\n    ,object_team_member_id\n    ,object_employment_status\n    ,object_state\n    ,nice_name\n    ,updated_hours\n    ,created_at\n    ,updated_at\n\n    FROM \n    OPENROWSET(\n        BULK 'Rosterfy/User/*.parquet',\n        DATA_SOURCE = 'ExtDSCurated',\n        FORMAT = 'PARQUET'\n    )  AS r\n) AS t\nWHERE isCurrent = 1\n;\n\nSELECT top 20 * FROM [LDW].[vwRosterfyUser]\nWHERE object_first_name = 'Gavin';\n--where InsertedOn='2022-03-17T23:25:39.8930000';\n\nDROP EXTERNAL TABLE [LDW].[extRosterfyUser];\n\n\nselect count(*) as cnt from [LDW].[extRosterfyUserNEW1];\n\nselect *\nfrom [LDW].[extRosterfyUserNEW1]\norder by created_at DESC;\n\nselect * \nfrom (\nSELECT \nRANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent\n,SurrogateKey \n,id\n,email\n,object_first_name\n,rowHash\n,InsertedOn\nFROM [LDW].[vwRosterfyUser]\n) as t\nwhere isCurrent = 1\n;\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "logicalDW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}