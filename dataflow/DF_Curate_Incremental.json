{
	"name": "DF_Curate_Incremental",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Cleansed_Rosterfy_User",
						"type": "DatasetReference"
					},
					"name": "todayCleansedData"
				},
				{
					"dataset": {
						"referenceName": "DS_LogicalDW",
						"type": "DatasetReference"
					},
					"name": "allRosterfyUser"
				},
				{
					"dataset": {
						"referenceName": "DS_LogicalDW",
						"type": "DatasetReference"
					},
					"name": "getMaxSurrKey"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Curated_Rosterfy_User",
						"type": "DatasetReference"
					},
					"name": "sinkIncrementalData"
				},
				{
					"name": "cacheMaxSurrKey"
				}
			],
			"transformations": [
				{
					"name": "selectCuratedColumns"
				},
				{
					"name": "addRowHash"
				},
				{
					"name": "AddSurrogateKey"
				},
				{
					"name": "keepRowHash"
				},
				{
					"name": "chkNewRows"
				},
				{
					"name": "seedSurrogateKey"
				},
				{
					"name": "addDateColumn"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DFParamPLTriggerTime as timestamp (toTimestamp('1999-01-01 00:00:01'))",
				"}",
				"source(output(",
				"          object_id as string,",
				"          object_id_token as string,",
				"          object_email as string,",
				"          object_first_name as string,",
				"          object_middle_name as string,",
				"          object_last_name as string,",
				"          object_preferred_name as string,",
				"          object_phone as string,",
				"          object_dob as string,",
				"          object_picture as string,",
				"          object_picture_status as string,",
				"          object_is_subscribed as string,",
				"          object_is_unreachable as string,",
				"          object_terms as string,",
				"          object_rating as string,",
				"          object_shift_privacy as string,",
				"          object_is_team_leader as string,",
				"          object_email_verified as string,",
				"          object_verify_email_token as string,",
				"          object_login_lockout_attempts as string,",
				"          object_login_lockout_at as string,",
				"          object_login_lockout_email_sent_at as string,",
				"          object_last_login_at as string,",
				"          object_delete_requested_at as string,",
				"          object_deleted_at as string,",
				"          object_created_at as string,",
				"          object_updated_at as string,",
				"          object_team_member_id as string,",
				"          object_state as string,",
				"          object_employment_status as string,",
				"          object_address as string,",
				"          nice_rrn as string,",
				"          nice_email_verified as string,",
				"          nice_first_name as string,",
				"          nice_is_subscribed as string,",
				"          nice_is_team_leader as string,",
				"          nice_last_name as string,",
				"          nice_middle_name as string,",
				"          nice_phone as string,",
				"          {nice_phone:raw} as string,",
				"          nice_preferred_name as string,",
				"          nice_shift_privacy as string,",
				"          nice_terms as string,",
				"          nice_employment_status as string,",
				"          nice_state as string,",
				"          nice_team_member_id as string,",
				"          nice_name as string,",
				"          nice_age as string,",
				"          nice_address as string,",
				"          nice_address_oneline as string,",
				"          nice_info as string,",
				"          nice_background_check_user as string,",
				"          nice_preferred_first_name as string,",
				"          nice_available_by_default as string,",
				"          nice_google2fa_enabled as string,",
				"          nice_picture_status as string,",
				"          nice_delete_requested as string,",
				"          nice_updated_hours as string,",
				"          nice_login_locked as string,",
				"          nice_duplicate_status as string,",
				"          permissions_read as string,",
				"          permissions_update as string,",
				"          permissions_delete as string,",
				"          permissions_impersonate as string,",
				"          attributes_employment_status_name as string,",
				"          attributes_employment_status_label as string,",
				"          attributes_employment_status_type as string,",
				"          attributes_employment_state_name as string,",
				"          attributes_employment_state_label as string,",
				"          attributes_employment_state_type as string,",
				"          object_address_iso as string,",
				"          object_address_coordinates as string,",
				"          object_address_street_address_1 as string,",
				"          object_address_street_address_2 as string,",
				"          object_address_street_address_3 as string,",
				"          object_address_city as string,",
				"          object_address_postcode as string,",
				"          object_address_region as string,",
				"          object_address_country as string,",
				"          object_address_latitude as string,",
				"          object_address_longitude as string,",
				"          object_address_coordinates_latitude as string,",
				"          object_address_coordinates_longitude as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> todayCleansedData",
				"source(output(",
				"          isCurrent as long,",
				"          id as string,",
				"          rowHash as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT isCurrent, id, rowHash \\nFROM (\\nSELECT \\nRANK() OVER (PARTITION by id ORDER BY InsertedOn DESC) as isCurrent \\n,id\\n,rowHash\\nFROM LDW.vwRosterfyUser\\n) as t\\nwhere isCurrent = 1',",
				"     format: 'query') ~> allRosterfyUser",
				"source(output(",
				"          maxSurrogateKey as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT max(SurrogateKey) AS maxSurrogateKey FROM LDW.vwRosterfyUser',",
				"     format: 'query') ~> getMaxSurrKey",
				"todayCleansedData select(mapColumn(",
				"          id = object_id,",
				"          email = object_email,",
				"          object_first_name,",
				"          object_middle_name,",
				"          object_last_name,",
				"          object_preferred_name,",
				"          object_is_subscribed,",
				"          is_unreachable = object_is_unreachable,",
				"          object_terms,",
				"          rating = object_rating,",
				"          object_shift_privacy,",
				"          object_is_team_leader,",
				"          object_email_verified,",
				"          last_login_at = object_last_login_at,",
				"          delete_requested_at = object_delete_requested_at,",
				"          deleted_at = object_deleted_at,",
				"          created_at = object_created_at,",
				"          updated_at = object_updated_at,",
				"          object_team_member_id,",
				"          object_state,",
				"          object_employment_status,",
				"          nice_email_verified,",
				"          nice_first_name,",
				"          nice_is_subscribed,",
				"          nice_is_team_leader,",
				"          nice_last_name,",
				"          nice_middle_name,",
				"          nice_phone,",
				"          nice_preferred_name,",
				"          nice_shift_privacy,",
				"          nice_terms,",
				"          nice_employment_status,",
				"          nice_state,",
				"          nice_team_member_id,",
				"          nice_name,",
				"          age = nice_age,",
				"          preferred_first_name = nice_preferred_first_name,",
				"          available_by_default = nice_available_by_default,",
				"          google2fa_enabled = nice_google2fa_enabled,",
				"          nice_picture_status,",
				"          delete_requested = object_delete_requested_at,",
				"          updated_hours = nice_updated_hours",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCuratedColumns",
				"selectCuratedColumns derive(rowHash = sha2(256, columns())) ~> addRowHash",
				"addDateColumn keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> AddSurrogateKey",
				"allRosterfyUser select(mapColumn(",
				"          rowHash",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> keepRowHash",
				"addRowHash, keepRowHash exists(addRowHash@rowHash==keepRowHash@rowHash,",
				"     negate:true,",
				"     broadcast: 'auto')~> chkNewRows",
				"AddSurrogateKey derive(SurrogateKey = SurrogateKey + cacheMaxSurrKey#outputs()[1].maxSurrogateKey) ~> seedSurrogateKey",
				"chkNewRows derive(InsertedOn = $DFParamPLTriggerTime) ~> addDateColumn",
				"seedSurrogateKey sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkIncrementalData",
				"getMaxSurrKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> cacheMaxSurrKey"
			]
		}
	}
}