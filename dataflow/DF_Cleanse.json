{
	"name": "DF_Cleanse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Raw_FilePath_Json",
						"type": "DatasetReference"
					},
					"name": "JSONRaw"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sinkToCSV",
					"rejectedDataLinkedService": {
						"referenceName": "datalake",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     SinkFolder as string,",
				"     FileName as string,",
				"     SinkFileName as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     backslashEscape: true,",
				"     partitionBy('hash', 1)) ~> JSONRaw",
				"derivedColumn1 foldDown(unroll(tempArray),",
				"     mapColumn(",
				"          every(match(1==1))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> flatten1",
				"JSONRaw derive(tempArray = array(\"1\")) ~> derivedColumn1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'cleansed',",
				"     folderPath: ($SinkFolder),",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\"',",
				"     quoteChar: '\\\"',",
				"     nullValue: '-',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:[($SinkFileName)],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkToCSV"
			]
		}
	}
}