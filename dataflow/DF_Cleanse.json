{
	"name": "DF_Cleanse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "datalake",
						"type": "LinkedServiceReference"
					},
					"name": "JSONRaw"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sinkToCSV",
					"rejectedDataLinkedService": {
						"referenceName": "datalake",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "mapJSONHierarchySubcolumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     SinkFolder as string,",
				"     FileName as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'raw',",
				"     folderPath: ($SinkFolder),",
				"     fileName: ($FileName),",
				"     documentForm: 'documentPerLine',",
				"     backslashEscape: true) ~> JSONRaw",
				"JSONRaw select(mapColumn(",
				"          each(object,match(true()),",
				"               'object_'+$$ = $$),",
				"          each(nice,match(true()),",
				"               'nice_'+$$ = $$),",
				"          each(permissions,match(true()),",
				"               'permissions_'+$$ = $$),",
				"          each(attributes.employment_status,match(true()),",
				"               'attributes_employment_status_'+$$ = $$),",
				"          each(attributes.state,match(true()),",
				"               'attributes_employment_state_'+$$ = $$),",
				"          each(object.address,match(true()),",
				"               'object_address_'+$$ = $$),",
				"          each(object.address.coordinates,match(true()),",
				"               'object_address_coordinates_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> mapJSONHierarchySubcolumns",
				"mapJSONHierarchySubcolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'cleansed',",
				"     folderPath: ($SinkFolder),",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkToCSV"
			]
		}
	}
}